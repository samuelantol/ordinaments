{"ast":null,"code":"var _jsxFileName = \"/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/Sounds.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Sounds extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeId: props.dataAppToSounds,\n      play: true\n    };\n    this.url = \"https://actions.google.com/sounds/v1/water/waves_crashing_on_rock_beach.ogg\";\n    this.audio = new Audio(this.url);\n    this.audio.addEventListener('ended', function () {\n      this.currentTime = 0;\n      this.play();\n    }, false);\n    this.togglePlay = this.togglePlay.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      activeId: props.dataAppToSounds\n    };\n  }\n\n  togglePlay() {\n    this.setState({\n      play: !this.state.play\n    });\n    this.state.play ? this.audio.play() : this.audio.pause();\n  } //   componentDidMount() {\n  //   }\n  //   componentDidUpdate() {\n  //   }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"audioBtn\",\n        onClick: this.togglePlay,\n        children: [\" \", this.state.play ? /*#__PURE__*/_jsxDEV(PlayArrow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 63\n        }, this) : /*#__PURE__*/_jsxDEV(Pause, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 79\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Sounds;","map":{"version":3,"sources":["/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/Sounds.js"],"names":["React","Sounds","PureComponent","constructor","props","state","activeId","dataAppToSounds","play","url","audio","Audio","addEventListener","currentTime","togglePlay","bind","getDerivedStateFromProps","setState","pause","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,aAA3B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEF,KAAK,CAACG,eADL;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAKA,SAAKC,GAAL,GAAW,6EAAX;AACA,SAAKC,KAAL,GAAa,IAAIC,KAAJ,CAAU,KAAKF,GAAf,CAAb;AACA,SAAKC,KAAL,CAAWE,gBAAX,CAA4B,OAA5B,EAAqC,YAAY;AAC/C,WAAKC,WAAL,GAAmB,CAAnB;AACA,WAAKL,IAAL;AACD,KAHD,EAGG,KAHH;AAIA,SAAKM,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AAED;;AAE8B,SAAxBC,wBAAwB,CAACZ,KAAD,EAAQC,KAAR,EAAe;AAC5C,WAAO;AAACC,MAAAA,QAAQ,EAAEF,KAAK,CAACG;AAAjB,KAAP;AACD;;AAGDO,EAAAA,UAAU,GAAG;AACX,SAAKG,QAAL,CAAc;AACVT,MAAAA,IAAI,EAAE,CAAC,KAAKH,KAAL,CAAWG;AADR,KAAd;AAIA,SAAKH,KAAL,CAAWG,IAAX,GAAkB,KAAKE,KAAL,CAAWF,IAAX,EAAlB,GAAsC,KAAKE,KAAL,CAAWQ,KAAX,EAAtC;AACD,GA9BsC,CAgCzC;AAEA;AAEA;AAEA;;;AAEEC,EAAAA,MAAM,GAAG;AACP,wBACI;AAAA,6BACI;AACI,QAAA,EAAE,EAAC,UADP;AAEI,QAAA,OAAO,EAAE,KAAKL,UAFlB;AAAA,wBAEgC,KAAKT,KAAL,CAAWG,IAAX,gBAAkB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAlB,gBAAkC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAFlE;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQD;;AAjDsC;;AAoDzC,eAAeP,MAAf","sourcesContent":["import React from 'react';\n\nclass Sounds extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeId: props.dataAppToSounds,\n      play: true\n    }\n\n    this.url = \"https://actions.google.com/sounds/v1/water/waves_crashing_on_rock_beach.ogg\";\n    this.audio = new Audio(this.url);\n    this.audio.addEventListener('ended', function () {\n      this.currentTime = 0;\n      this.play();\n    }, false);\n    this.togglePlay = this.togglePlay.bind(this);\n\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {activeId: props.dataAppToSounds};\n  }\n\n\n  togglePlay() {\n    this.setState({\n        play: !this.state.play\n    });\n\n    this.state.play ? this.audio.play() : this.audio.pause();\n  }\n\n//   componentDidMount() {\n\n//   }\n\n//   componentDidUpdate() {\n\n//   }\n\n  render() {\n    return (\n        <div>\n            <button\n                id=\"audioBtn\"\n                onClick={this.togglePlay}> {this.state.play ? <PlayArrow /> : <Pause />}\n            </button>\n        </div>\n    );\n  }\n}\n\nexport default Sounds;"]},"metadata":{},"sourceType":"module"}