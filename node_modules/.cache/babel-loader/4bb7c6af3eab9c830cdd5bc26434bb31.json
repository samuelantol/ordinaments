{"ast":null,"code":"var _jsxFileName = \"/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/Navigation.js\";\nimport React, { Component } from 'react';\nimport './navigation.css';\nimport HighlightTitle from \"./svg/highlight.svg\";\nimport MapTitle from \"./svg/map.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet activeId = 38;\nlet activeCategory = 0;\nlet toHighlight = [[1, 17, 18, 22, 34, 40, 49, 55, 58, 61, 72], [22, 23, 35, 39, 42, 48], [2, 4, 5, 8, 11, 17, 19, 28, 31, 33], [28, 34, 39, 49, 57, 59, 62, 68]]; // Categories\n\nconst Category = props => {\n  let categoryClass = 'category-' + props.name; //navigation.css\n\n  if (props.active) {\n    categoryClass = 'category-' + props.name + ' category-' + props.name + '-active';\n    console.log('category-active');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: categoryClass,\n    id: props.key,\n    name: props.name,\n    onClick: props.categorySelect\n  }, props.key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Category;\n\nconst buildCategoriesState = () => {\n  const categoriesState = {}; // Calculate details for each circle\n\n  for (let key = 1; key <= 4; key++) {\n    const categoryDetails = {\n      active: false\n    };\n    categoriesState[key] = categoryDetails;\n  }\n\n  return categoriesState;\n}; // Circle\n\n\nconst FragmentCircle = props => {\n  let circleClass = 'circle circle-unknown'; //navigation.css\n\n  if (props.discovered) {\n    circleClass = 'circle circle-discovered';\n  }\n\n  if (props.active) {\n    circleClass = 'circle circle-active';\n    console.log('circle-active');\n  }\n\n  if (props.highlighted) {\n    circleClass += ' circle-highlighted';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: circleClass,\n    id: props.key,\n    onClick: props.handleClick\n  }, props.key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = FragmentCircle;\n\nconst buildMatrixState = (rowCount, rowLength) => {\n  const totalCircles = rowCount * rowLength;\n  const matrixState = {}; // Calculate details for each circle\n\n  for (let key = 1; key <= totalCircles; key++) {\n    const circleDetails = {\n      active: false,\n      discovered: false,\n      highlighted: false\n    };\n    matrixState[key] = circleDetails;\n  }\n\n  matrixState[activeId].active = true;\n  return matrixState;\n}; //\n//\n// Class\n//\n//\n\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n    const initialRowCount = 15;\n    const initialRowLength = 5;\n    this.state = {\n      rowCount: initialRowCount,\n      rowLength: initialRowLength,\n      categories: buildCategoriesState(),\n      matrix: buildMatrixState(initialRowCount, initialRowLength)\n    };\n    this.handleClick = this.handleClick.bind(this); //this.categorySelect = this.categorySelect.bind(this);\n  } // CATEGORIES\n\n\n  categoryHighlight(matrix, id) {\n    for (let key = 0; key < toHighlight[id].length; key++) {\n      matrix[toHighlight[id][key]].highlighted = true;\n    }\n\n    return matrix;\n  }\n\n  stopHighlight(matrix, previous) {\n    for (let key = 0; key < toHighlight[previous].length; key++) {\n      matrix[toHighlight[previous][key]].highlighted = false;\n    }\n\n    return matrix;\n  }\n\n  categorySelect(e) {\n    const matrix = this.state.matrix;\n    const categories = this.state.categories;\n    const id = e.target.id;\n    console.log(id);\n\n    if (activeCategory === 0) {\n      categories[id].active = true;\n      this.categoryHighlight(matrix, id - 1);\n      activeCategory = id;\n    } else {\n      if (activeCategory === id) {\n        categories[id].active = false;\n        this.stopHighlight(matrix, activeCategory - 1);\n        activeCategory = 0;\n      } else {\n        categories[activeCategory].active = false;\n        categories[id].active = true;\n        this.stopHighlight(matrix, activeCategory - 1);\n        this.categoryHighlight(matrix, id - 1);\n        activeCategory = id;\n      }\n    }\n\n    this.setState({\n      categories,\n      matrix\n    });\n  }\n\n  categoriesBuilder() {\n    var cat = [];\n    cat.push(Category({\n      key: 1,\n      name: 'nature',\n      active: cat.active,\n      categorySelect: this.categorySelect\n    }));\n    cat.push(Category({\n      key: 2,\n      name: 'industrial',\n      active: cat.active,\n      categorySelect: this.categorySelect\n    }));\n    cat.push(Category({\n      key: 3,\n      name: 'waterside',\n      active: cat.active,\n      categorySelect: this.categorySelect\n    }));\n    cat.push(Category({\n      key: 4,\n      name: 'street',\n      active: cat.active,\n      categorySelect: this.categorySelect\n    }));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", cat, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 14\n    }, this);\n  } // NAVIGATION\n\n\n  handleClick(e) {\n    const matrix = this.state.matrix;\n    const id = e.target.id;\n    matrix[id].active = true;\n    matrix[activeId].active = false;\n    matrix[activeId].discovered = true;\n    this.setState({\n      matrix\n    });\n    activeId = id;\n    this.props.handleIdChange(id);\n  }\n\n  rowBuilder(rowCount, rowLength, rows = []) {\n    if (rowCount > 0) {\n      const circleKey = rowCount * rowLength;\n      rows.push(this.circleBuilder(circleKey, rowCount, rowLength));\n      return this.rowBuilder(rowCount - 1, rowLength, rows);\n    }\n\n    return rows;\n  }\n\n  circleBuilder(circleKey, rowCount, rowLength, row = []) {\n    if (rowLength > 0) {\n      const circle = this.state.matrix[circleKey];\n      row.push(FragmentCircle({\n        key: circleKey,\n        active: circle.active,\n        discovered: circle.discovered,\n        highlighted: circle.highlighted,\n        handleClick: this.handleClick\n      }));\n      return this.circleBuilder(circleKey - 1, rowCount, rowLength - 1, row);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: row\n    }, 'row-' + rowCount, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this);\n  } // RENDER\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: MapTitle,\n          alt: \"MAP\",\n          className: \"map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), this.rowBuilder(this.state.rowCount, this.state.rowLength)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cats\",\n        children: this.categoriesBuilder()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: HighlightTitle,\n        alt: \"HIGHLIGHT\",\n        className: \"highlight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Navigation;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Category\");\n$RefreshReg$(_c2, \"FragmentCircle\");","map":{"version":3,"sources":["/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/Navigation.js"],"names":["React","Component","activeId","activeCategory","toHighlight","Category","props","categoryClass","name","active","console","log","key","categorySelect","buildCategoriesState","categoriesState","categoryDetails","FragmentCircle","circleClass","discovered","highlighted","handleClick","buildMatrixState","rowCount","rowLength","totalCircles","matrixState","circleDetails","Navigation","constructor","initialRowCount","initialRowLength","state","categories","matrix","bind","categoryHighlight","id","length","stopHighlight","previous","e","target","setState","categoriesBuilder","cat","push","handleIdChange","rowBuilder","rows","circleKey","circleBuilder","row","circle","render","MapTitle","HighlightTitle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './navigation.css';\n\nimport HighlightTitle from './svg/highlight.svg';\nimport MapTitle from './svg/map.svg';\n\nlet activeId = 38;\nlet activeCategory = 0;\n\nlet toHighlight = [[1,17,18,22,34,40,49,55,58,61,72],[22,23,35,39,42,48],[2,4,5,8,11,17,19,28,31,33],[28,34,39,49,57,59,62,68]];\n\n// Categories\n\nconst Category = props => {\n  let categoryClass = 'category-'+props.name; //navigation.css\n\n  if (props.active) {\n    categoryClass = 'category-'+props.name+' category-'+props.name+'-active';\n    console.log('category-active');\n  }\n\n  return (\n    <div\n      className={categoryClass}\n      id={props.key}\n      key={props.key}\n      name={props.name}\n      onClick={props.categorySelect}\n    />\n  );\n}\n\nconst buildCategoriesState = () => {\n  const categoriesState = {};\n\n  // Calculate details for each circle\n  for (let key = 1; key <= 4; key++) {\n    const categoryDetails = {\n      active: false,\n    };\n\n    categoriesState[key] = categoryDetails;\n  }\n\n  return categoriesState;\n}\n\n// Circle\n\nconst FragmentCircle = props => {\n  let circleClass = 'circle circle-unknown'; //navigation.css\n\n  if (props.discovered) {\n    circleClass = 'circle circle-discovered';\n  }\n  if (props.active) {\n    circleClass = 'circle circle-active';\n    console.log('circle-active');\n  }\n\n  if (props.highlighted) {\n    circleClass += ' circle-highlighted';\n  }\n\n  return (\n    <div\n      className={circleClass}\n      id={props.key}\n      key={props.key}\n      onClick={props.handleClick}\n    />\n  );\n}\n\nconst buildMatrixState = (rowCount, rowLength) => {\n  const totalCircles = rowCount * rowLength;\n  const matrixState = {};\n\n  // Calculate details for each circle\n  for (let key = 1; key <= totalCircles; key++) {\n    const circleDetails = {\n      active: false,\n      discovered: false,\n      highlighted: false\n    };\n\n    matrixState[key] = circleDetails;\n  }\n  matrixState[activeId].active = true;\n\n  return matrixState;\n}\n\n//\n//\n// Class\n//\n//\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props)\n    const initialRowCount = 15;\n    const initialRowLength = 5;\n\n    this.state = {\n      rowCount: initialRowCount,\n      rowLength: initialRowLength,\n      categories: buildCategoriesState(),\n      matrix: buildMatrixState(initialRowCount, initialRowLength)\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    //this.categorySelect = this.categorySelect.bind(this);\n  }\n\n  // CATEGORIES\n\n  categoryHighlight(matrix, id) {\n    for (let key = 0; key < toHighlight[id].length; key++) {\n      matrix[toHighlight[id][key]].highlighted = true;\n    }\n    return matrix;\n  }\n\n  stopHighlight(matrix, previous) {\n    for (let key = 0; key < toHighlight[previous].length; key++) {\n      matrix[toHighlight[previous][key]].highlighted = false;\n    }\n    return matrix;\n  }\n\n  categorySelect(e) {\n    const matrix = this.state.matrix;\n    const categories = this.state.categories;\n    const id = e.target.id;\n\n    console.log(id);\n\n    if (activeCategory === 0) {\n      categories[id].active = true;\n      this.categoryHighlight(matrix, id-1);\n      activeCategory = id;\n    } else {\n      if (activeCategory === id) {\n        categories[id].active = false;\n        this.stopHighlight(matrix, activeCategory-1);\n        activeCategory = 0;\n      } else {\n        categories[activeCategory].active = false;\n        categories[id].active = true;\n        this.stopHighlight(matrix, activeCategory-1);\n        this.categoryHighlight(matrix, id-1);\n        activeCategory = id;\n      }\n    }\n    \n    this.setState({ categories, matrix });\n  }\n\n  categoriesBuilder() {\n    var cat = [];\n\n    cat.push(Category({\n      key: 1,\n      name: 'nature',\n      active: cat.active,\n      categorySelect: this.categorySelect\n    }));\n    cat.push(Category({\n      key: 2,\n      name: 'industrial',\n      active: cat.active,\n      categorySelect: this.categorySelect\n    }));\n    cat.push(Category({\n      key: 3,\n      name: 'waterside',\n      active: cat.active,\n      categorySelect: this.categorySelect\n    }));\n    cat.push(Category({\n      key: 4,\n      name: 'street',\n      active: cat.active,\n      categorySelect: this.categorySelect\n    }));\n\n    return ( <div> {cat} </div> );\n  }\n\n  // NAVIGATION\n\n  handleClick(e) {\n    const matrix = this.state.matrix;\n    const id = e.target.id;\n\n    matrix[id].active = true;\n    matrix[activeId].active = false;\n    matrix[activeId].discovered = true;\n\n    this.setState({ matrix });\n    activeId = id;\n    this.props.handleIdChange(id);\n  }\n\n  rowBuilder(rowCount, rowLength, rows = []) {\n    if (rowCount > 0) {\n      const circleKey = rowCount * rowLength;\n      rows.push(this.circleBuilder(circleKey, rowCount, rowLength));\n\n      return this.rowBuilder(rowCount - 1, rowLength, rows);\n    }\n    return rows\n  }\n\n  circleBuilder(circleKey, rowCount, rowLength, row = []) {\n    if (rowLength > 0) {\n      const circle = this.state.matrix[circleKey];\n\n      row.push(FragmentCircle({\n        key: circleKey,\n        active: circle.active,\n        discovered: circle.discovered,\n        highlighted: circle.highlighted,\n        handleClick: this.handleClick,\n      }));\n\n      return this.circleBuilder(circleKey - 1, rowCount, rowLength - 1, row);\n    }\n    return (<div key={'row-' + rowCount}>{row}</div>);\n  }\n\n  // RENDER\n\n  render() {\n    return (\n      <div>\n        <div className=\"navigation\">\n          <img src={MapTitle} alt='MAP' className=\"map\" />\n          {this.rowBuilder(this.state.rowCount, this.state.rowLength)}\n        </div>\n        <div className=\"cats\">\n          {this.categoriesBuilder()}\n          {/* <img src={nature} alt='nature' className=\"category-nature\" onClick={this.categorySelect} />\n          <img src={industrial} alt='industrial' className=\"category-industrial\" onClick={this.categorySelect} />\n          <img src={waterside} alt='waterside' className=\"category-waterside\" onClick={this.categorySelect} />\n          <img src={street} alt='street' className=\"category-street\" onClick={this.categorySelect} /> */}\n          \n        </div>\n        <img src={HighlightTitle} alt='HIGHLIGHT' className=\"highlight\" />\n      </div>\n    )\n  }\n}\n\nexport default Navigation;"]},"metadata":{},"sourceType":"module"}