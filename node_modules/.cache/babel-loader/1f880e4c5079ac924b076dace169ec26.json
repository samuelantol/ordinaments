{"ast":null,"code":"var _jsxFileName = \"/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/ThreeStatic.js\";\nimport React from \"react\";\nimport * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport \"./three.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ThreeStatic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeId: props.dataAppToThreeStatic\n    }; //console.log(this.state);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    //console.log(props.dataAppToThreeStatic);\n    return {\n      activeId: props.dataAppToThreeStatic\n    };\n  }\n\n  threeRun() {\n    let activeId = this.state.activeId;\n    console.log(activeId);\n    var mouseX = 0,\n        mouseY = 0;\n    var windowHalfX = window.innerWidth / 2;\n    var windowHalfY = window.innerHeight / 2;\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 2000);\n    camera.position.z = 250;\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setClearColor(0x000000, 1);\n    this.mount.appendChild(renderer.domElement); // OBJ LOADER & MODEL SETUP\n\n    var loadModel = function (url) {\n      return new Promise(resolve => {\n        new OBJLoader().load(url, resolve);\n      });\n    };\n\n    let model1, model2, model3;\n    let p1 = loadModel('./data/strom-61669.obj'); //.then(result => {  model1 = result.scene.children[0]; });\n\n    let p2 = loadModel('./data/lavicka-61186.obj');\n    let p3 = loadModel('./data/pozor-48737.obj'); //if all Promises resolved \n\n    Promise.all([p1, p2, p3]).then(() => {\n      //do something to the model\n      model1.position.set(0, 0, 0);\n      model2.position.set(0, 20, 0);\n      model3.position.set(0, 50, 0); //add model to the scene\n\n      if (activeId % 3 === 0) {\n        scene.add(model1);\n      } else if (activeId % 3 === 1) {\n        scene.add(model2);\n      } else {\n        scene.add(model3);\n      } //continue the process\n      //startRenderLoop();\n\n    }); // // OBJ LOADER\n    // var loadModel = function() {\n    //     var progress = console.log;\n    //     return new Promise(function( resolve, reject ){\n    //         const objLoader = new OBJLoader();\n    //         if (activeId % 3 === 0) {\n    //             objLoader.load( './data/strom-61669.obj', resolve, progress, reject );\n    //             console.log(\"strom\");\n    //         } else if (activeId % 3 === 1) {\n    //             objLoader.load( './data/lavicka-61186.obj', resolve, progress, reject );\n    //             console.log(\"lavicka\");\n    //         } else {\n    //             objLoader.load( './data/pozor-48737.obj', resolve, progress, reject );\n    //             console.log(\"pozor\");\n    //         }\n    //     }); \n    // }\n    // // MODEL SETUP\n    // var myObjPromise = loadModel();\n    // myObjPromise.then(myObj => {\n    //     //var geometry = myObj.geometry;\n    //     var material = myObj.children[0].material;\n    //     const circle = new THREE.TextureLoader().load( './data/circle.png' );\n    //     material.size = 3;\n    //     material.sizeAttenuation = true;\n    //     material.map = circle;\n    //     material.alphaTest = 0.5;\n    //     material.transparent = true;\n    //     myObj.scale.x = 100;\n    //     myObj.scale.y = 100;\n    //     myObj.scale.z = 100;\n    // });\n\n    const light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);\n    scene.add(light);\n\n    var onWindowResize = function () {\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    var onDocumentMouseMove = function (event) {\n      mouseX = (-event.clientX + windowHalfX) / 2;\n      mouseY = (-event.clientY + windowHalfY) / 2;\n    };\n\n    document.addEventListener('mousemove', onDocumentMouseMove);\n    window.addEventListener('resize', onWindowResize);\n\n    var animate = function () {\n      requestAnimationFrame(animate); // myObjPromise.then(myObj => {\n      //   scene.add( myObj );\n      // });\n\n      camera.position.x += (mouseX - camera.position.x) * .05;\n      camera.position.y += (-mouseY - camera.position.y) * .05;\n      camera.lookAt(scene.position);\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  componentDidMount() {\n    this.threeRun();\n  }\n\n  componentDidUpdate() {\n    this.threeRun();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.mount = ref,\n      className: \"object\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ThreeStatic;","map":{"version":3,"sources":["/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/ThreeStatic.js"],"names":["React","THREE","OBJLoader","ThreeStatic","Component","constructor","props","state","activeId","dataAppToThreeStatic","getDerivedStateFromProps","threeRun","console","log","mouseX","mouseY","windowHalfX","window","innerWidth","windowHalfY","innerHeight","scene","Scene","camera","PerspectiveCamera","position","z","renderer","WebGLRenderer","setSize","setPixelRatio","devicePixelRatio","setClearColor","mount","appendChild","domElement","loadModel","url","Promise","resolve","load","model1","model2","model3","p1","p2","p3","all","then","set","add","light","HemisphereLight","onWindowResize","aspect","updateProjectionMatrix","onDocumentMouseMove","event","clientX","clientY","document","addEventListener","animate","requestAnimationFrame","x","y","lookAt","render","componentDidMount","componentDidUpdate","ref"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport \"./three.css\";\n\nclass ThreeStatic extends React.Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            activeId: props.dataAppToThreeStatic\n        }\n        //console.log(this.state);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        //console.log(props.dataAppToThreeStatic);\n        return {activeId: props.dataAppToThreeStatic}\n    }\n\n    threeRun() {\n        let activeId = this.state.activeId;\n        console.log(activeId);\n\n        var mouseX = 0, mouseY = 0;\n        var windowHalfX = window.innerWidth / 2;\n        var windowHalfY = window.innerHeight / 2;\n        \n        var scene = new THREE.Scene();\n        var camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 );\n        camera.position.z = 250;\n\n        var renderer = new THREE.WebGLRenderer();\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        renderer.setPixelRatio( window.devicePixelRatio );\n        renderer.setClearColor( 0x000000, 1);\n        this.mount.appendChild( renderer.domElement );\n\n        // OBJ LOADER & MODEL SETUP\n        var loadModel = function(url) {\n            return new Promise(resolve => {\n                new OBJLoader().load(url, resolve);\n            }); \n        }\n\n        let model1, model2, model3;\n        let p1 = loadModel('./data/strom-61669.obj'); //.then(result => {  model1 = result.scene.children[0]; });\n        let p2 = loadModel('./data/lavicka-61186.obj');\n        let p3 = loadModel('./data/pozor-48737.obj');\n\n        //if all Promises resolved \n        Promise.all([p1,p2,p3]).then(() => {\n            //do something to the model\n            model1.position.set(0,0,0);\n            model2.position.set(0,20,0);\n            model3.position.set(0,50,0);\n        \n            //add model to the scene\n            if (activeId % 3 === 0) {\n                scene.add(model1);\n            } else if (activeId % 3 === 1) {\n                scene.add(model2);\n            } else {\n                scene.add(model3);\n            }\n\n            //continue the process\n            //startRenderLoop();\n         });\n\n        // // OBJ LOADER\n        // var loadModel = function() {\n        //     var progress = console.log;\n        //     return new Promise(function( resolve, reject ){\n        //         const objLoader = new OBJLoader();\n        //         if (activeId % 3 === 0) {\n        //             objLoader.load( './data/strom-61669.obj', resolve, progress, reject );\n        //             console.log(\"strom\");\n        //         } else if (activeId % 3 === 1) {\n        //             objLoader.load( './data/lavicka-61186.obj', resolve, progress, reject );\n        //             console.log(\"lavicka\");\n        //         } else {\n        //             objLoader.load( './data/pozor-48737.obj', resolve, progress, reject );\n        //             console.log(\"pozor\");\n        //         }\n        //     }); \n        // }\n\n        // // MODEL SETUP\n        // var myObjPromise = loadModel();\n\n        // myObjPromise.then(myObj => {\n        //     //var geometry = myObj.geometry;\n        //     var material = myObj.children[0].material;\n\n        //     const circle = new THREE.TextureLoader().load( './data/circle.png' );\n\n        //     material.size = 3;\n        //     material.sizeAttenuation = true;\n        //     material.map = circle;\n        //     material.alphaTest = 0.5;\n        //     material.transparent = true;\n\n        //     myObj.scale.x = 100;\n        //     myObj.scale.y = 100;\n        //     myObj.scale.z = 100;\n        // });\n\n        const light = new THREE.HemisphereLight( 0xffffbb, 0x080820, 1 );\n        scene.add( light ); \n\n        var onWindowResize = function() {\n            windowHalfX = window.innerWidth / 2;\n            windowHalfY = window.innerHeight / 2;\n        \n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n        \n            renderer.setSize( window.innerWidth, window.innerHeight );\n        }\n        \n        var onDocumentMouseMove = function(event) {\n            mouseX = ( - event.clientX + windowHalfX ) / 2;\n            mouseY = ( - event.clientY + windowHalfY ) / 2;\n        }\n\n        document.addEventListener( 'mousemove', onDocumentMouseMove );\n        window.addEventListener( 'resize', onWindowResize );\n        \n        var animate = function () {\n            requestAnimationFrame( animate );\n            \n            // myObjPromise.then(myObj => {\n            //   scene.add( myObj );\n            // });\n\n            camera.position.x += ( mouseX - camera.position.x ) * .05;\n            camera.position.y += ( - mouseY - camera.position.y ) * .05;\n\n            camera.lookAt( scene.position );\n\n            renderer.render( scene, camera );\n        };\n\n        animate();\n    }\n\n    componentDidMount() {\n        this.threeRun();\n    }\n\n    componentDidUpdate() {\n        this.threeRun();\n    }\n    render() {\n        return (\n            <div ref={ref => (this.mount = ref)} className = \"object\"/>\n        )\n    } \n}\n\nexport default ThreeStatic;"]},"metadata":{},"sourceType":"module"}