{"ast":null,"code":"var _jsxFileName = \"/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/ThreeStatic.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ThreeStatic extends React.Component {\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 2000);\n    camera.position.z = 250;\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    this.mount.appendChild(renderer.domElement); // OBJ LOADER\n\n    var loadModel = function () {\n      var progress = console.log;\n      return new Promise(function (resolve, reject) {\n        //this.THREE = THREE;\n        const objLoader = new OBJLoader();\n        objLoader.load('./data/strom-61669.obj', resolve, progress, reject);\n      });\n    }; // MODEL SETUP\n\n\n    var myObjPromise = loadModel();\n    myObjPromise.then(myObj => {\n      //var geometry = myObj.geometry;\n      var material = myObj.children[0].material;\n      const circle = new THREE.TextureLoader().load('./data/circle.png');\n      material.size = 3;\n      material.sizeAttenuation = true;\n      material.map = circle;\n      material.alphaTest = 0.5;\n      material.transparent = true;\n      myObj.scale.x = 100;\n      myObj.scale.y = 100;\n      myObj.scale.z = 100;\n    });\n    const light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);\n    scene.add(light);\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      myObjPromise.then(myObj => {\n        scene.add(myObj);\n      });\n      camera.position.x += (mouseX - camera.position.x) * .05;\n      camera.position.y += (-mouseY - camera.position.y) * .05;\n      camera.lookAt(scene.position);\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.mount = ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\"); //ReactDOM.render(<App />, rootElement);\n\nexport default ThreeStatic;","map":{"version":3,"sources":["/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/ThreeStatic.js"],"names":["React","ReactDOM","THREE","OBJLoader","ThreeStatic","Component","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","setSize","setPixelRatio","devicePixelRatio","mount","appendChild","domElement","loadModel","progress","console","log","Promise","resolve","reject","objLoader","load","myObjPromise","then","myObj","material","children","circle","TextureLoader","size","sizeAttenuation","map","alphaTest","transparent","scale","x","y","light","HemisphereLight","add","animate","requestAnimationFrame","mouseX","mouseY","lookAt","render","ref","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\n\nclass ThreeStatic extends React.Component {\n    componentDidMount() {\n        var scene = new THREE.Scene();\n        var camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 );\n        camera.position.z = 250;\n\n        var renderer = new THREE.WebGLRenderer();\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        renderer.setPixelRatio( window.devicePixelRatio );\n        this.mount.appendChild( renderer.domElement );\n\n        // OBJ LOADER\n        var loadModel = function() {\n            var progress = console.log;\n            return new Promise(function( resolve, reject ){\n                //this.THREE = THREE;\n                const objLoader = new OBJLoader();\n                objLoader.load( './data/strom-61669.obj', resolve, progress, reject );\n            });\n        }\n        // MODEL SETUP\n        var myObjPromise = loadModel();\n\n        myObjPromise.then(myObj => {\n            //var geometry = myObj.geometry;\n            var material = myObj.children[0].material;\n\n            const circle = new THREE.TextureLoader().load( './data/circle.png' );\n\n            material.size = 3;\n            material.sizeAttenuation = true;\n            material.map = circle;\n            material.alphaTest = 0.5;\n            material.transparent = true;\n\n            myObj.scale.x = 100;\n            myObj.scale.y = 100;\n            myObj.scale.z = 100;\n        });\n\n        const light = new THREE.HemisphereLight( 0xffffbb, 0x080820, 1 );\n        scene.add( light );\n        \n        var animate = function () {\n            requestAnimationFrame( animate );\n            \n            myObjPromise.then(myObj => {\n              scene.add( myObj );\n            });\n\n            camera.position.x += ( mouseX - camera.position.x ) * .05;\n            camera.position.y += ( - mouseY - camera.position.y ) * .05;\n\n            camera.lookAt( scene.position );\n\n            renderer.render( scene, camera );\n        };\n\n        animate();\n    }\n    render() {\n        return (\n            <div ref={ref => (this.mount = ref)} />\n        )\n    }\n}const rootElement = document.getElementById(\"root\")\n//ReactDOM.render(<App />, rootElement);\nexport default ThreeStatic;"]},"metadata":{},"sourceType":"module"}