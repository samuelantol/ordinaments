{"ast":null,"code":"var _jsxFileName = \"/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport './map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet activeId = 38;\nlet discoveredIds = {};\nlet locationLon = [0.0, 48.148711, 48.1111, 45.132123, 12.122, 17.2222, 2.222];\nlet locationLat = [0.0, 17.090743, 17.0800, 16.9992, 18.222, 16.887, 7.2]; // const seRef = () => {\n//   return useRef();\n// };\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2FtLWFudCIsImEiOiJSLUx1SURJIn0.QTPlnr_Xse6dYc96m47H4A';\n\nclass Mapimap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeId: props.dataAppToMap\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    activeId = props.dataAppToMap;\n    return {\n      activeId: props.dataAppToMap\n    };\n  }\n\n}\n\nconst Map = () => {\n  _s();\n\n  const mapContainerRef = useRef(null); // initialize map when component mounts\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/sam-ant/cknyvea7s1tmy17pj49f2i8gl',\n      center: [locationLat[activeId % 7], locationLon[activeId % 7]],\n      zoom: 16\n    }); // add navigation control (the +/- zoom buttons)\n    //map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n    // clean up on unmount\n\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    ref: mapContainerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n}; // class Map extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       activeId: props.dataAppToMap,\n//       mapContainerRef: seRef,\n//     }\n//   }\n//   static getDerivedStateFromProps(props, state) {\n//     return {activeId: props.dataAppToMap}\n//   }\n//   mapBackground() {\n//     this.map = new mapboxgl.Map({\n//       container: mapContainerRef.current,\n//       style: 'mapbox://styles/sam-ant/cknyvea7s1tmy17pj49f2i8gl',\n//       center: [locationLat[activeId%7], locationLon[activeId%7]],\n//       zoom: 16\n//     })\n//   }\n//   componentDidMount() {\n//     this.mapBackground();\n//   }\n//   render() {\n//     return <div className=\"map-container\" />\n//   }\n// }\n\n\n_s(Map, \"JDsoK+vCj+KIdyRFXV6E+3zLK1c=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/Map.js"],"names":["React","useRef","useEffect","mapboxgl","activeId","discoveredIds","locationLon","locationLat","accessToken","Mapimap","Component","constructor","props","state","dataAppToMap","getDerivedStateFromProps","Map","mapContainerRef","map","container","current","style","center","zoom","remove"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,WAAP;;AAEA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,aAAa,GAAG,EAApB;AACA,IAAIC,WAAW,GAAG,CAAC,GAAD,EAAM,SAAN,EAAiB,OAAjB,EAA0B,SAA1B,EAAqC,MAArC,EAA6C,OAA7C,EAAsD,KAAtD,CAAlB;AACA,IAAIC,WAAW,GAAG,CAAC,GAAD,EAAM,SAAN,EAAiB,OAAjB,EAA0B,OAA1B,EAAmC,MAAnC,EAA2C,MAA3C,EAAmD,GAAnD,CAAlB,C,CAEA;AACA;AACA;;AAEAJ,QAAQ,CAACK,WAAT,GAAuB,mEAAvB;;AAEA,MAAMC,OAAN,SAAsBT,KAAK,CAACU,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXT,MAAAA,QAAQ,EAAEQ,KAAK,CAACE;AADL,KAAb;AAGD;;AAE8B,SAAxBC,wBAAwB,CAACH,KAAD,EAAQC,KAAR,EAAe;AAC5CT,IAAAA,QAAQ,GAAGQ,KAAK,CAACE,YAAjB;AACA,WAAO;AAACV,MAAAA,QAAQ,EAAEQ,KAAK,CAACE;AAAjB,KAAP;AACD;;AAXmC;;AActC,MAAME,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,eAAe,GAAGhB,MAAM,CAAC,IAAD,CAA9B,CADgB,CAGhB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,GAAG,GAAG,IAAIf,QAAQ,CAACa,GAAb,CAAiB;AAC3BG,MAAAA,SAAS,EAAEF,eAAe,CAACG,OADA;AAE3BC,MAAAA,KAAK,EAAE,mDAFoB;AAG3BC,MAAAA,MAAM,EAAE,CAACf,WAAW,CAACH,QAAQ,GAAC,CAAV,CAAZ,EAA0BE,WAAW,CAACF,QAAQ,GAAC,CAAV,CAArC,CAHmB;AAI3BmB,MAAAA,IAAI,EAAE;AAJqB,KAAjB,CAAZ,CADc,CAQd;AACA;AAEA;;AACA,WAAO,MAAML,GAAG,CAACM,MAAJ,EAAb;AACD,GAbQ,EAaN,EAbM,CAAT,CAJgB,CAiBR;;AAER,sBAAO;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,GAAG,EAAEP;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApBD,C,CAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;GAnDMD,G;;KAAAA,G;AAqDN,eAAeA,GAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport './map.css';\n\nlet activeId = 38;\nlet discoveredIds = {};\nlet locationLon = [0.0, 48.148711, 48.1111, 45.132123, 12.122, 17.2222, 2.222];\nlet locationLat = [0.0, 17.090743, 17.0800, 16.9992, 18.222, 16.887, 7.2];\n\n// const seRef = () => {\n//   return useRef();\n// };\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2FtLWFudCIsImEiOiJSLUx1SURJIn0.QTPlnr_Xse6dYc96m47H4A';\n\nclass Mapimap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeId: props.dataAppToMap,\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    activeId = props.dataAppToMap;\n    return {activeId: props.dataAppToMap}\n  }\n}\n\nconst Map = () => {\n  const mapContainerRef = useRef(null);\n\n  // initialize map when component mounts\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/sam-ant/cknyvea7s1tmy17pj49f2i8gl',\n      center: [locationLat[activeId%7], locationLon[activeId%7]],\n      zoom: 16,\n    });\n\n    // add navigation control (the +/- zoom buttons)\n    //map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n\n    // clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return <div className=\"map-container\" ref={mapContainerRef} />;\n};\n\n// class Map extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       activeId: props.dataAppToMap,\n//       mapContainerRef: seRef,\n//     }\n//   }\n\n//   static getDerivedStateFromProps(props, state) {\n//     return {activeId: props.dataAppToMap}\n//   }\n  \n//   mapBackground() {\n//     this.map = new mapboxgl.Map({\n//       container: mapContainerRef.current,\n//       style: 'mapbox://styles/sam-ant/cknyvea7s1tmy17pj49f2i8gl',\n//       center: [locationLat[activeId%7], locationLon[activeId%7]],\n//       zoom: 16\n//     })\n//   }\n\n//   componentDidMount() {\n//     this.mapBackground();\n//   }\n\n//   render() {\n//     return <div className=\"map-container\" />\n//   }\n// }\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}