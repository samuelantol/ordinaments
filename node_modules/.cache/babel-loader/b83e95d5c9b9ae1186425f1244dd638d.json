{"ast":null,"code":"var _jsxFileName = \"/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/App.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\"; //OBJLoader(THREE);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 2000);\n    camera.position.z = 5;\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.mount.appendChild(renderer.domElement);\n    var objLoader = new OBJLoader();\n    objLoader.setMaterials(materials);\n    objLoader.load(\"./data/strom-61669.obj\", object => {\n      this.freedomMesh = object;\n      this.freedomMesh.position.setY(3); //or  this\n\n      this.freedomMesh.scale.set(0.02, 0.02, 0.02);\n      this.scene.add(this.freedomMesh);\n    }, xhr => {\n      console.log(xhr.loaded / xhr.total * 100 + \"% loaded\");\n    }, error => {\n      console.log(\"An error happened\" + error);\n    }); // // OBJ LOADER\n    // var loadModel = function() {\n    //     var progress = console.log;\n    //     return new Promise(function( resolve, reject ){\n    //         this.THREE = THREE;\n    //         const objLoader = new OBJLoader();\n    //         objLoader.load( './data/strom-61669.obj', resolve, progress, reject );\n    //     });\n    // }\n    // // MODEL SETUP\n    // var myObjPromise = loadModel();\n    // myObjPromise.then(myObj => {\n    //     //var geometry = myObj.geometry;\n    //     var material = myObj.children[0].material;\n    //     const circle = new THREE.TextureLoader().load( './data/circle.png' );\n    //     material.size = 3;\n    //     material.sizeAttenuation = true;\n    //     material.map = circle;\n    //     material.alphaTest = 0.5;\n    //     material.transparent = true;\n    //     myObj.scale.x = 100;\n    //     myObj.scale.y = 100;\n    //     myObj.scale.z = 100;\n    // });\n\n    const light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);\n    scene.add(light);\n\n    var animate = function () {\n      requestAnimationFrame(animate); // myObjPromise.then(myObj => {\n      //   scene.add( myObj );\n      // });\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.mount = ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 80,\n  columnNumber: 17\n}, this), rootElement);\nexport default App;","map":{"version":3,"sources":["/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/App.js"],"names":["React","ReactDOM","THREE","OBJLoader","App","Component","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","setSize","mount","appendChild","domElement","objLoader","setMaterials","materials","load","object","freedomMesh","setY","scale","set","add","xhr","console","log","loaded","total","error","light","HemisphereLight","animate","requestAnimationFrame","render","ref","rootElement","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,sCAA1B,C,CACA;;;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAC9BC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,KAAK,GAAG,IAAIL,KAAK,CAACM,KAAV,EAAZ;AACA,QAAIC,MAAM,GAAG,IAAIP,KAAK,CAACQ,iBAAV,CAA6B,EAA7B,EAAiCC,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAA5D,EAAyE,CAAzE,EAA4E,IAA5E,CAAb;AACAJ,IAAAA,MAAM,CAACK,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;AAEA,QAAIC,QAAQ,GAAG,IAAId,KAAK,CAACe,aAAV,EAAf;AACAD,IAAAA,QAAQ,CAACE,OAAT,CAAkBP,MAAM,CAACC,UAAzB,EAAqCD,MAAM,CAACE,WAA5C;AACA,SAAKM,KAAL,CAAWC,WAAX,CAAwBJ,QAAQ,CAACK,UAAjC;AAEA,QAAIC,SAAS,GAAG,IAAInB,SAAJ,EAAhB;AACAmB,IAAAA,SAAS,CAACC,YAAV,CAAuBC,SAAvB;AACAF,IAAAA,SAAS,CAACG,IAAV,CAAe,wBAAf,EACIC,MAAM,IAAI;AAAC,WAAKC,WAAL,GAAmBD,MAAnB;AACP,WAAKC,WAAL,CAAiBb,QAAjB,CAA0Bc,IAA1B,CAA+B,CAA/B,EADM,CAC6B;;AACnC,WAAKD,WAAL,CAAiBE,KAAjB,CAAuBC,GAAvB,CAA2B,IAA3B,EAAiC,IAAjC,EAAuC,IAAvC;AACA,WAAKvB,KAAL,CAAWwB,GAAX,CAAe,KAAKJ,WAApB;AACH,KALL,EAKOK,GAAG,IAAI;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAaF,GAAG,CAACG,MAAJ,GAAaH,GAAG,CAACI,KAAlB,GAA2B,GAA3B,GAAiC,UAA7C;AACH,KAPL,EAOOC,KAAK,IAAI;AACRJ,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBG,KAAlC;AACH,KATL,EAXgB,CAsBhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,UAAMC,KAAK,GAAG,IAAIpC,KAAK,CAACqC,eAAV,CAA2B,QAA3B,EAAqC,QAArC,EAA+C,CAA/C,CAAd;AACAhC,IAAAA,KAAK,CAACwB,GAAN,CAAWO,KAAX;;AAEA,QAAIE,OAAO,GAAG,YAAY;AACtBC,MAAAA,qBAAqB,CAAED,OAAF,CAArB,CADsB,CAGtB;AACA;AACA;;AAEAxB,MAAAA,QAAQ,CAAC0B,MAAT,CAAiBnC,KAAjB,EAAwBE,MAAxB;AACH,KARD;;AAUA+B,IAAAA,OAAO;AACV;;AACDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,GAAG,EAAEC,GAAG,IAAK,KAAKxB,KAAL,GAAawB;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAvE6B;;AAwEjC,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACD7C,QAAQ,CAACyC,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBE,WAAzB;AACA,eAAexC,GAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\n//OBJLoader(THREE);\n\nclass App extends React.Component {\n    componentDidMount() {\n        var scene = new THREE.Scene();\n        var camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 );\n        camera.position.z = 5;\n\n        var renderer = new THREE.WebGLRenderer();\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        this.mount.appendChild( renderer.domElement );\n\n        var objLoader = new OBJLoader();\n        objLoader.setMaterials(materials);\n        objLoader.load(\"./data/strom-61669.obj\",\n            object => {this.freedomMesh = object;\n                this.freedomMesh.position.setY(3); //or  this\n                this.freedomMesh.scale.set(0.02, 0.02, 0.02);\n                this.scene.add(this.freedomMesh);\n            }, xhr => {\n                console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\");\n            }, error => {\n                console.log(\"An error happened\" + error);\n            });\n\n        // // OBJ LOADER\n        // var loadModel = function() {\n        //     var progress = console.log;\n        //     return new Promise(function( resolve, reject ){\n        //         this.THREE = THREE;\n        //         const objLoader = new OBJLoader();\n        //         objLoader.load( './data/strom-61669.obj', resolve, progress, reject );\n        //     });\n        // }\n        // // MODEL SETUP\n        // var myObjPromise = loadModel();\n\n        // myObjPromise.then(myObj => {\n        //     //var geometry = myObj.geometry;\n        //     var material = myObj.children[0].material;\n\n        //     const circle = new THREE.TextureLoader().load( './data/circle.png' );\n\n        //     material.size = 3;\n        //     material.sizeAttenuation = true;\n        //     material.map = circle;\n        //     material.alphaTest = 0.5;\n        //     material.transparent = true;\n\n        //     myObj.scale.x = 100;\n        //     myObj.scale.y = 100;\n        //     myObj.scale.z = 100;\n        // });\n\n        const light = new THREE.HemisphereLight( 0xffffbb, 0x080820, 1 );\n        scene.add( light );\n        \n        var animate = function () {\n            requestAnimationFrame( animate );\n            \n            // myObjPromise.then(myObj => {\n            //   scene.add( myObj );\n            // });\n\n            renderer.render( scene, camera );\n        };\n\n        animate();\n    }\n    render() {\n        return (\n            <div ref={ref => (this.mount = ref)} />\n        )\n    }\n}const rootElement = document.getElementById(\"root\")\nReactDOM.render(<App />, rootElement);\nexport default App;"]},"metadata":{},"sourceType":"module"}