{"ast":null,"code":"var _jsxFileName = \"/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/App.js\";\nimport React, { Component } from 'react'; // import ReactDOM from 'react-dom'\n// import './app.css'\n// import FragmentMatrix from './fragmentMatrix.js'\n\nimport ThreeStatic from './ThreeStatic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet id = 0;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleIdChange = index => {\n      this.setState({\n        activeId: index\n      });\n    };\n\n    this.state = {\n      activeId: 0\n    };\n    id = this.state.activeId;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ThreeStatic, {\n        activeId: this.state.activeId,\n        handleIdChange: this.handleIdChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; //ReactDOM.render(<App />, document.getElementById('root'))\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import * as THREE from \"three\";\n// import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\n// //OBJLoader(THREE);\n// class App extends React.Component {\n//     componentDidMount() {\n//         var scene = new THREE.Scene();\n//         var camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 );\n//         camera.position.z = 250;\n//         var renderer = new THREE.WebGLRenderer();\n//         renderer.setSize( window.innerWidth, window.innerHeight );\n//         this.mount.appendChild( renderer.domElement );\n//         // OBJ LOADER\n//         var loadModel = function() {\n//             var progress = console.log;\n//             return new Promise(function( resolve, reject ){\n//                 //this.THREE = THREE;\n//                 const objLoader = new OBJLoader();\n//                 objLoader.load( './data/strom-61669.obj', resolve, progress, reject );\n//             });\n//         }\n//         // MODEL SETUP\n//         var myObjPromise = loadModel();\n//         myObjPromise.then(myObj => {\n//             //var geometry = myObj.geometry;\n//             var material = myObj.children[0].material;\n//             const circle = new THREE.TextureLoader().load( './data/circle.png' );\n//             material.size = 3;\n//             material.sizeAttenuation = true;\n//             material.map = circle;\n//             material.alphaTest = 0.5;\n//             material.transparent = true;\n//             myObj.scale.x = 100;\n//             myObj.scale.y = 100;\n//             myObj.scale.z = 100;\n//         });\n//         const light = new THREE.HemisphereLight( 0xffffbb, 0x080820, 1 );\n//         scene.add( light );\n//         var animate = function () {\n//             requestAnimationFrame( animate );\n//             myObjPromise.then(myObj => {\n//               scene.add( myObj );\n//             });\n//             renderer.render( scene, camera );\n//         };\n//         animate();\n//     }\n//     render() {\n//         return (\n//             <div ref={ref => (this.mount = ref)} />\n//         )\n//     }\n// }const rootElement = document.getElementById(\"root\")\n// ReactDOM.render(<App />, rootElement);\n// export default App;","map":{"version":3,"sources":["/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/App.js"],"names":["React","Component","ThreeStatic","id","App","constructor","props","handleIdChange","index","setState","activeId","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAIC,EAAE,GAAG,CAAT;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,cARmB,GAQDC,KAAD,IAAW;AAC1B,WAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAEF;AAAX,OAAd;AACD,KAVkB;;AAEjB,SAAKG,KAAL,GAAa;AACXD,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGAP,IAAAA,EAAE,GAAG,KAAKQ,KAAL,CAAWD,QAAhB;AACD;;AAMDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWD,QAAlC;AAA4C,QAAA,cAAc,EAAE,KAAKH;AAAjE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAnByB;;AAsB5B,eAAeH,GAAf,C,CACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\n// import ReactDOM from 'react-dom'\n// import './app.css'\n// import FragmentMatrix from './fragmentMatrix.js'\nimport ThreeStatic from './ThreeStatic'\n\nlet id = 0\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeId: 0\n    }\n    id = this.state.activeId\n  }\n\n  handleIdChange = (index) => {\n    this.setState({activeId: index})\n  }\n\n  render() {\n    return (\n      <div>\n        <ThreeStatic activeId={this.state.activeId} handleIdChange={this.handleIdChange}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n//ReactDOM.render(<App />, document.getElementById('root'))\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import * as THREE from \"three\";\n// import { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\n// //OBJLoader(THREE);\n\n// class App extends React.Component {\n//     componentDidMount() {\n//         var scene = new THREE.Scene();\n//         var camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 );\n//         camera.position.z = 250;\n\n//         var renderer = new THREE.WebGLRenderer();\n//         renderer.setSize( window.innerWidth, window.innerHeight );\n//         this.mount.appendChild( renderer.domElement );\n\n//         // OBJ LOADER\n//         var loadModel = function() {\n//             var progress = console.log;\n//             return new Promise(function( resolve, reject ){\n//                 //this.THREE = THREE;\n//                 const objLoader = new OBJLoader();\n//                 objLoader.load( './data/strom-61669.obj', resolve, progress, reject );\n//             });\n//         }\n//         // MODEL SETUP\n//         var myObjPromise = loadModel();\n\n//         myObjPromise.then(myObj => {\n//             //var geometry = myObj.geometry;\n//             var material = myObj.children[0].material;\n\n//             const circle = new THREE.TextureLoader().load( './data/circle.png' );\n\n//             material.size = 3;\n//             material.sizeAttenuation = true;\n//             material.map = circle;\n//             material.alphaTest = 0.5;\n//             material.transparent = true;\n\n//             myObj.scale.x = 100;\n//             myObj.scale.y = 100;\n//             myObj.scale.z = 100;\n//         });\n\n//         const light = new THREE.HemisphereLight( 0xffffbb, 0x080820, 1 );\n//         scene.add( light );\n        \n//         var animate = function () {\n//             requestAnimationFrame( animate );\n            \n//             myObjPromise.then(myObj => {\n//               scene.add( myObj );\n//             });\n\n//             renderer.render( scene, camera );\n//         };\n\n//         animate();\n//     }\n//     render() {\n//         return (\n//             <div ref={ref => (this.mount = ref)} />\n//         )\n//     }\n// }const rootElement = document.getElementById(\"root\")\n// ReactDOM.render(<App />, rootElement);\n// export default App;"]},"metadata":{},"sourceType":"module"}