{"ast":null,"code":"var _jsxFileName = \"/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/ThreeStatic.js\";\nimport React from \"react\";\nimport * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport \"./three.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet scene = new THREE.Scene();\nlet camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 2000);\nlet renderer = new THREE.WebGLRenderer({\n  alpha: true\n});\nvar myObjPromise;\ncamera.position.z = 250;\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.setPixelRatio(window.devicePixelRatio);\nrenderer.setClearColor(0x000000, 0);\n\nclass ThreeStatic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeId: props.dataAppToThreeStatic //scene: new THREE.Scene(),\n      // camera: new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 ),\n      // renderer: new THREE.WebGLRenderer( { alpha: true } )\n\n    }; // this.state.camera.position.z =250;\n    // this.state.renderer.setSize( window.innerWidth, window.innerHeight );\n    // this.state.renderer.setPixelRatio( window.devicePixelRatio );\n    // this.state.renderer.setClearColor( 0x000000, 0);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      activeId: props.dataAppToThreeStatic\n    };\n  }\n\n  threeObject() {\n    // this.state.scene = new THREE.Scene();  // TOTO TREBA OPRAVIT\n    // var scene = this.state.scene;\n    // var camera = this.state.camera;\n    // var renderer = this.state.renderer;\n    // this.mount.appendChild( this.state.renderer.domElement );\n    var activeId = this.state.activeId;\n    var mouseX = 0,\n        mouseY = 0;\n    var windowHalfX = window.innerWidth / 2;\n    var windowHalfY = window.innerHeight / 2; //\n    //\n    // OBJ LOADER & MODEL SETUP\n\n    var loadModel = function (url) {\n      return new Promise(resolve => {\n        new OBJLoader().load(url, resolve);\n      });\n    }; // var myObjPromise;\n\n\n    if (activeId % 7 === 0) {\n      myObjPromise = loadModel('./data/strom-61669.obj');\n    } else if (activeId % 7 === 1) {\n      myObjPromise = loadModel('./data/lavicka-61186.obj');\n    } else if (activeId % 3 === 2) {\n      myObjPromise = loadModel('./data/pozor-48737.obj');\n    } else if (activeId % 7 === 3) {\n      myObjPromise = loadModel('./data/1.obj');\n    } else if (activeId % 7 === 4) {\n      myObjPromise = loadModel('./data/2.obj');\n    } else if (activeId % 7 === 5) {\n      myObjPromise = loadModel('./data/3.obj');\n    } else {\n      myObjPromise = loadModel('./data/4.obj');\n    }\n\n    myObjPromise.then(myObj => {\n      var material = myObj.children[0].material;\n      const circle = new THREE.TextureLoader().load('./data/circle.png');\n      material.size = 3;\n      material.sizeAttenuation = true;\n      material.map = circle;\n      material.alphaTest = 0.5;\n      material.transparent = true;\n      myObj.scale.x = 100;\n      myObj.scale.y = 100;\n      myObj.scale.z = 100;\n      scene.add(myObj);\n    }); //\n    //\n    // HELPER FUNCTIONS\n\n    var onWindowResize = function () {\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    var onDocumentMouseMove = function (event) {\n      mouseX = (-event.clientX + windowHalfX) / 2;\n      mouseY = (-event.clientY + windowHalfY) / 2;\n    };\n\n    document.addEventListener('mousemove', onDocumentMouseMove);\n    window.addEventListener('resize', onWindowResize); //\n    //\n    // ANIMATE\n\n    var animate = function () {\n      requestAnimationFrame(animate); // myObjPromise.then(myObj => {\n      //   scene.add( myObj );\n      // });\n\n      camera.position.x += (mouseX - camera.position.x) * .05;\n      camera.position.y += (-mouseY - camera.position.y) * .05;\n      camera.lookAt(scene.position);\n      renderer.render(scene, camera);\n    };\n\n    animate();\n    return () => myObjPromise.remove();\n  }\n\n  componentDidMount() {\n    this.mount.appendChild(renderer.domElement); //toto\n\n    this.threeObject();\n  }\n\n  componentDidUpdate() {\n    this.threeObject();\n  }\n\n  componentWillUnmount() {\n    myObjPromise.then(myObj => {\n      scene.remove(myObj);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.mount = ref,\n      className: \"object\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ThreeStatic;","map":{"version":3,"sources":["/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/ThreeStatic.js"],"names":["React","THREE","OBJLoader","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","alpha","myObjPromise","position","z","setSize","setPixelRatio","devicePixelRatio","setClearColor","ThreeStatic","Component","constructor","props","state","activeId","dataAppToThreeStatic","getDerivedStateFromProps","threeObject","mouseX","mouseY","windowHalfX","windowHalfY","loadModel","url","Promise","resolve","load","then","myObj","material","children","circle","TextureLoader","size","sizeAttenuation","map","alphaTest","transparent","scale","x","y","add","onWindowResize","aspect","updateProjectionMatrix","onDocumentMouseMove","event","clientX","clientY","document","addEventListener","animate","requestAnimationFrame","lookAt","render","remove","componentDidMount","mount","appendChild","domElement","componentDidUpdate","componentWillUnmount","ref"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport \"./three.css\";\n\nlet scene = new THREE.Scene();\nlet camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 );\nlet renderer = new THREE.WebGLRenderer( { alpha: true } );\n\nvar myObjPromise;\n\ncamera.position.z =250;\n\nrenderer.setSize( window.innerWidth, window.innerHeight );\nrenderer.setPixelRatio( window.devicePixelRatio );\nrenderer.setClearColor( 0x000000, 0);\n\nclass ThreeStatic extends React.Component {\n\n    constructor(props) {\n        super(props); \n        this.state = {\n            activeId: props.dataAppToThreeStatic,\n            //scene: new THREE.Scene(),\n            // camera: new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 ),\n            // renderer: new THREE.WebGLRenderer( { alpha: true } )\n        }\n        // this.state.camera.position.z =250;\n\n        // this.state.renderer.setSize( window.innerWidth, window.innerHeight );\n        // this.state.renderer.setPixelRatio( window.devicePixelRatio );\n        // this.state.renderer.setClearColor( 0x000000, 0);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        return {activeId: props.dataAppToThreeStatic}\n    }\n\n    threeObject() {\n        // this.state.scene = new THREE.Scene();  // TOTO TREBA OPRAVIT\n        // var scene = this.state.scene;\n        // var camera = this.state.camera;\n        // var renderer = this.state.renderer;\n\n        // this.mount.appendChild( this.state.renderer.domElement );\n\n        var activeId = this.state.activeId;\n\n        var mouseX = 0, mouseY = 0;\n        var windowHalfX = window.innerWidth / 2;\n        var windowHalfY = window.innerHeight / 2;\n\n        //\n        //\n        // OBJ LOADER & MODEL SETUP\n\n        var loadModel = function(url) {\n            return new Promise(resolve => {\n                new OBJLoader().load(url, resolve);\n            }); \n        }\n\n        // var myObjPromise;\n\n        if (activeId % 7 === 0) {\n            myObjPromise = loadModel('./data/strom-61669.obj');\n        } else if (activeId % 7 === 1) {\n            myObjPromise = loadModel('./data/lavicka-61186.obj');\n        } else if (activeId % 3 === 2) {\n            myObjPromise = loadModel('./data/pozor-48737.obj');\n        } else if (activeId % 7 === 3) {\n            myObjPromise = loadModel('./data/1.obj');\n        } else if (activeId % 7 === 4) {\n            myObjPromise = loadModel('./data/2.obj');\n        } else if (activeId % 7 === 5) {\n            myObjPromise = loadModel('./data/3.obj');\n        } else {\n            myObjPromise = loadModel('./data/4.obj');\n        }\n\n        myObjPromise.then(myObj => {\n            var material = myObj.children[0].material;\n\n            const circle = new THREE.TextureLoader().load( './data/circle.png' );\n\n            material.size = 3;\n            material.sizeAttenuation = true;\n            material.map = circle;\n            material.alphaTest = 0.5;\n            material.transparent = true;\n\n            myObj.scale.x = 100;\n            myObj.scale.y = 100;\n            myObj.scale.z = 100;\n\n            scene.add(myObj);\n        });\n\n        //\n        //\n        // HELPER FUNCTIONS\n\n        var onWindowResize = function() {\n            windowHalfX = window.innerWidth / 2;\n            windowHalfY = window.innerHeight / 2;\n        \n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n        \n            renderer.setSize( window.innerWidth, window.innerHeight );\n        }\n        \n        var onDocumentMouseMove = function(event) {\n            mouseX = ( - event.clientX + windowHalfX ) / 2;\n            mouseY = ( - event.clientY + windowHalfY ) / 2;\n        }\n\n        document.addEventListener( 'mousemove', onDocumentMouseMove );\n        window.addEventListener( 'resize', onWindowResize );\n        \n        //\n        //\n        // ANIMATE\n\n        var animate = function () {\n            requestAnimationFrame( animate );\n            \n            // myObjPromise.then(myObj => {\n            //   scene.add( myObj );\n            // });\n\n            camera.position.x += ( mouseX - camera.position.x ) * .05;\n            camera.position.y += ( - mouseY - camera.position.y ) * .05;\n\n            camera.lookAt( scene.position );\n\n            renderer.render( scene, camera );\n        };\n\n        animate();\n\n        return () => myObjPromise.remove();\n    }\n\n    componentDidMount() {\n        this.mount.appendChild( renderer.domElement ); //toto\n        this.threeObject();\n    }\n\n    componentDidUpdate() {\n        this.threeObject()\n    }\n\n    componentWillUnmount() {\n        myObjPromise.then(myObj => {\n\n            scene.remove(myObj);\n        });\n    }\n\n    render() {\n        return (\n            <div ref={ref => (this.mount = ref)} className = \"object\"/>\n        )\n    } \n}\n\nexport default ThreeStatic;"]},"metadata":{},"sourceType":"module"}