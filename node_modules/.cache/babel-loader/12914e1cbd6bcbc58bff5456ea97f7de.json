{"ast":null,"code":"var _jsxFileName = \"/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/ThreeStatic.js\";\nimport React from \"react\";\nimport * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport \"./three.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ThreeStatic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeId: this.props.dataPartentToChild\n    };\n  }\n\n  componentDidMount() {\n    //const {activeId} = this.state;\n    //console.log(activeId);\n    var mouseX = 0,\n        mouseY = 0;\n    var windowHalfX = window.innerWidth / 2;\n    var windowHalfY = window.innerHeight / 2;\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 2000);\n    camera.position.z = 250;\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setClearColor(0x000000, 1);\n    this.mount.appendChild(renderer.domElement); // OBJ LOADER\n\n    var loadModel = function () {\n      var progress = console.log;\n      return new Promise(function (resolve, reject) {\n        const objLoader = new OBJLoader();\n\n        if (activeId % 3 === 0) {\n          objLoader.load('./data/strom-61669.obj', resolve, progress, reject);\n        } else if (activeId % 3 === 1) {\n          objLoader.load('./data/lavicka-61186.obj', resolve, progress, reject);\n        } else {\n          objLoader.load('./data/pozor-48737.obj', resolve, progress, reject);\n        }\n      });\n    }; // MODEL SETUP\n\n\n    var myObjPromise = loadModel();\n    myObjPromise.then(myObj => {\n      //var geometry = myObj.geometry;\n      var material = myObj.children[0].material;\n      const circle = new THREE.TextureLoader().load('./data/circle.png');\n      material.size = 3;\n      material.sizeAttenuation = true;\n      material.map = circle;\n      material.alphaTest = 0.5;\n      material.transparent = true;\n      myObj.scale.x = 100;\n      myObj.scale.y = 100;\n      myObj.scale.z = 100;\n    });\n    const light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);\n    scene.add(light);\n\n    var onWindowResize = function () {\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    var onDocumentMouseMove = function (event) {\n      mouseX = (-event.clientX + windowHalfX) / 2;\n      mouseY = (-event.clientY + windowHalfY) / 2;\n    };\n\n    document.addEventListener('mousemove', onDocumentMouseMove);\n    window.addEventListener('resize', onWindowResize);\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      myObjPromise.then(myObj => {\n        scene.add(myObj);\n      });\n      camera.position.x += (mouseX - camera.position.x) * .05;\n      camera.position.y += (-mouseY - camera.position.y) * .05;\n      camera.lookAt(scene.position);\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.mount = ref,\n      className: \"object\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ThreeStatic;","map":{"version":3,"sources":["/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/ThreeStatic.js"],"names":["React","THREE","OBJLoader","ThreeStatic","Component","constructor","props","state","activeId","dataPartentToChild","componentDidMount","mouseX","mouseY","windowHalfX","window","innerWidth","windowHalfY","innerHeight","scene","Scene","camera","PerspectiveCamera","position","z","renderer","WebGLRenderer","setSize","setPixelRatio","devicePixelRatio","setClearColor","mount","appendChild","domElement","loadModel","progress","console","log","Promise","resolve","reject","objLoader","load","myObjPromise","then","myObj","material","children","circle","TextureLoader","size","sizeAttenuation","map","alphaTest","transparent","scale","x","y","light","HemisphereLight","add","onWindowResize","aspect","updateProjectionMatrix","onDocumentMouseMove","event","clientX","clientY","document","addEventListener","animate","requestAnimationFrame","lookAt","render","ref"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport \"./three.css\";\n\nclass ThreeStatic extends React.Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            activeId: this.props.dataPartentToChild\n        }\n    }\n\n    componentDidMount() {\n        //const {activeId} = this.state;\n        //console.log(activeId);\n\n        var mouseX = 0, mouseY = 0;\n        var windowHalfX = window.innerWidth / 2;\n        var windowHalfY = window.innerHeight / 2;\n        \n        var scene = new THREE.Scene();\n        var camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 );\n        camera.position.z = 250;\n\n        var renderer = new THREE.WebGLRenderer();\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        renderer.setPixelRatio( window.devicePixelRatio );\n        renderer.setClearColor( 0x000000, 1);\n        this.mount.appendChild( renderer.domElement );\n\n        // OBJ LOADER\n        var loadModel = function() {\n            var progress = console.log;\n            return new Promise(function( resolve, reject ){\n                const objLoader = new OBJLoader();\n                if (activeId % 3 === 0) {\n                    objLoader.load( './data/strom-61669.obj', resolve, progress, reject );\n                } else if (activeId % 3 === 1) {\n                    objLoader.load( './data/lavicka-61186.obj', resolve, progress, reject );\n                } else {\n                    objLoader.load( './data/pozor-48737.obj', resolve, progress, reject );\n                }\n            });\n        }\n        // MODEL SETUP\n        var myObjPromise = loadModel();\n\n        myObjPromise.then(myObj => {\n            //var geometry = myObj.geometry;\n            var material = myObj.children[0].material;\n\n            const circle = new THREE.TextureLoader().load( './data/circle.png' );\n\n            material.size = 3;\n            material.sizeAttenuation = true;\n            material.map = circle;\n            material.alphaTest = 0.5;\n            material.transparent = true;\n\n            myObj.scale.x = 100;\n            myObj.scale.y = 100;\n            myObj.scale.z = 100;\n        });\n\n        const light = new THREE.HemisphereLight( 0xffffbb, 0x080820, 1 );\n        scene.add( light );\n\n        var onWindowResize = function() {\n            windowHalfX = window.innerWidth / 2;\n            windowHalfY = window.innerHeight / 2;\n        \n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n        \n            renderer.setSize( window.innerWidth, window.innerHeight );\n        }\n        \n        var onDocumentMouseMove = function(event) {\n            mouseX = ( - event.clientX + windowHalfX ) / 2;\n            mouseY = ( - event.clientY + windowHalfY ) / 2;\n        }\n\n        document.addEventListener( 'mousemove', onDocumentMouseMove );\n        window.addEventListener( 'resize', onWindowResize );\n        \n        var animate = function () {\n            requestAnimationFrame( animate );\n            \n            myObjPromise.then(myObj => {\n              scene.add( myObj );\n            });\n\n            camera.position.x += ( mouseX - camera.position.x ) * .05;\n            camera.position.y += ( - mouseY - camera.position.y ) * .05;\n\n            camera.lookAt( scene.position );\n\n            renderer.render( scene, camera );\n        };\n\n        animate();\n    }\n    render() {\n        return (\n            <div ref={ref => (this.mount = ref)} className = \"object\"/>\n        )\n    } \n}\n\nexport default ThreeStatic;"]},"metadata":{},"sourceType":"module"}