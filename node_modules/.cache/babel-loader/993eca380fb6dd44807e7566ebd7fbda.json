{"ast":null,"code":"var _jsxFileName = \"/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/Navigation.js\";\nimport React, { Component } from 'react';\nimport './navigation.css';\nimport CategoryNatureBlank from \"./svg/nature-blank.svg\";\nimport CategoryIndustrialBlank from \"./svg/industrial-blank.svg\";\nimport CategoryWatersideBlank from \"./svg/waterside-blank.svg\";\nimport CategoryStreetBlank from \"./svg/street-blank.svg\";\nimport Highlight from \"./svg/highlight.svg\"; // import CategoryNature from './svg/nature.svg';\n// import CategoryIndustrial from './svg/industrial.svg';\n// import CategoryWaterside from './svg/waterside.svg';\n// import CategoryStreet from './svg/street.svg';\n// import CategoryNatureActive from './svg/nature-active.svg';\n// import CategoryIndustrialActive from './svg/industrial-active.svg';\n// import CategoryWatersideActive from './svg/waterside-active.svg';\n// import CategoryStreetActive from './svg/street-active.svg';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet nature = CategoryNatureBlank;\nlet industrial = CategoryIndustrialBlank;\nlet waterside = CategoryWatersideBlank;\nlet street = CategoryStreetBlank;\nlet activeId = 38;\nlet activeCategory = 0;\nlet category1 = [1, 17, 18, 22, 34, 38, 49, 55, 58, 61, 72]; // Categories\n// const Category = props => {\n//   let categoryClass = 'category category-unknown'; //navigation.css\n//   if (props.active) {\n//     categoryClass = 'category category-discovered';\n//   }\n//   return (\n//     <div\n//       className={categoryClass}\n//       id={props.key}\n//       key={props.key}\n//       onClick={props.categorySelect}\n//     > </div>\n//   )\n// }\n// Circle\n\nconst FragmentCircle = props => {\n  let circleClass = 'circle circle-unknown'; //navigation.css\n\n  if (props.discovered) {\n    circleClass = 'circle circle-discovered';\n  }\n\n  if (props.active) {\n    circleClass = 'circle circle-active';\n  }\n\n  if (props.highlighted) {\n    circleClass += ' circle-highlighted';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: circleClass,\n    id: props.key,\n    onClick: props.handleClick\n  }, props.key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}; // Deault matrix\n\n\n_c = FragmentCircle;\n\nconst buildMatrixState = (rowCount, rowLength) => {\n  const totalCircles = rowCount * rowLength;\n  const matrixState = {}; // Calculate details for each circle\n\n  for (let key = 1; key <= totalCircles; key++) {\n    const circleDetails = {\n      active: false,\n      discovered: false,\n      highlighted: false\n    };\n    matrixState[key] = circleDetails;\n  }\n\n  matrixState[activeId].active = true;\n  return matrixState;\n}; // Class\n\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n    const initialRowCount = 15;\n    const initialRowLength = 5;\n    this.state = {\n      rowCount: initialRowCount,\n      rowLength: initialRowLength,\n      matrix: buildMatrixState(initialRowCount, initialRowLength)\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  categoryHover(index) {// if (index === 1) {\n    //   nature = CategoryNatureActive;\n    // } else if (index === 2) {\n    //   industrial = CategoryIndustrialActive;\n    // }\n  }\n\n  categorySelect(index) {\n    let matrix = this.state.matrix;\n\n    if (index === 0) {\n      for (let key = 1; key <= 75; key++) {\n        matrix[key].highlighted = false;\n      }\n    } else if (index === 1) {\n      for (let key = 0; key < category1.length; key++) {\n        matrix[category1[key]].highlighted = true;\n      }\n    }\n  }\n\n  handleClick(e) {\n    const matrix = this.state.matrix;\n    const id = e.target.id;\n    matrix[id].active = true;\n    matrix[activeId].active = false;\n    matrix[activeId].discovered = true;\n    this.setState({\n      matrix\n    });\n    activeId = id;\n    this.props.handleIdChange(id);\n  }\n\n  rowBuilder(rowCount, rowLength, rows = []) {\n    this.categorySelect(1);\n\n    if (rowCount > 0) {\n      const circleKey = rowCount * rowLength;\n      rows.push(this.circleBuilder(circleKey, rowCount, rowLength));\n      return this.rowBuilder(rowCount - 1, rowLength, rows);\n    }\n\n    return rows;\n  }\n\n  circleBuilder(circleKey, rowCount, rowLength, row = []) {\n    if (rowLength > 0) {\n      const circle = this.state.matrix[circleKey];\n      row.push(FragmentCircle({\n        key: circleKey,\n        active: circle.active,\n        discovered: circle.discovered,\n        highlighted: circle.highlighted,\n        handleClick: this.handleClick\n      }));\n      return this.circleBuilder(circleKey - 1, rowCount, rowLength - 1, row);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: row\n    }, 'row-' + rowCount, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Highlight,\n          className: \"highlight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), this.rowBuilder(this.state.rowCount, this.state.rowLength)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cats\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: nature,\n          className: \"category-nature\",\n          onMouseOver: this.categoryHover(1),\n          onClick: this.categorySelect(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: industrial,\n          className: \"category-industrial\",\n          onMouseOver: this.categoryHover(2),\n          onClick: this.categorySelect(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: waterside,\n          className: \"category-waterside\",\n          onMouseOver: this.categoryHover(3),\n          onClick: this.categorySelect(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: street,\n          className: \"category-street\",\n          onMouseOver: this.categoryHover(4),\n          onClick: this.categorySelect(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Highlight,\n        className: \"highlight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"FragmentCircle\");","map":{"version":3,"sources":["/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/Navigation.js"],"names":["React","Component","nature","CategoryNatureBlank","industrial","CategoryIndustrialBlank","waterside","CategoryWatersideBlank","street","CategoryStreetBlank","activeId","activeCategory","category1","FragmentCircle","props","circleClass","discovered","active","highlighted","key","handleClick","buildMatrixState","rowCount","rowLength","totalCircles","matrixState","circleDetails","Navigation","constructor","initialRowCount","initialRowLength","state","matrix","bind","categoryHover","index","categorySelect","length","e","id","target","setState","handleIdChange","rowBuilder","rows","circleKey","push","circleBuilder","row","circle","render","Highlight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './navigation.css';\n\nimport CategoryNatureBlank from './svg/nature-blank.svg';\nimport CategoryIndustrialBlank from './svg/industrial-blank.svg';\nimport CategoryWatersideBlank from './svg/waterside-blank.svg';\nimport CategoryStreetBlank from './svg/street-blank.svg';\n\nimport Highlight from './svg/highlight.svg';\n\n// import CategoryNature from './svg/nature.svg';\n// import CategoryIndustrial from './svg/industrial.svg';\n// import CategoryWaterside from './svg/waterside.svg';\n// import CategoryStreet from './svg/street.svg';\n// import CategoryNatureActive from './svg/nature-active.svg';\n// import CategoryIndustrialActive from './svg/industrial-active.svg';\n// import CategoryWatersideActive from './svg/waterside-active.svg';\n// import CategoryStreetActive from './svg/street-active.svg';\n\nlet nature = CategoryNatureBlank;\nlet industrial = CategoryIndustrialBlank;\nlet waterside = CategoryWatersideBlank;\nlet street = CategoryStreetBlank;\n\n\nlet activeId = 38;\nlet activeCategory = 0;\n\nlet category1 = [1,17,18,22,34,38,49,55,58,61,72];\n\n// Categories\n\n// const Category = props => {\n//   let categoryClass = 'category category-unknown'; //navigation.css\n\n//   if (props.active) {\n//     categoryClass = 'category category-discovered';\n//   }\n\n//   return (\n//     <div\n//       className={categoryClass}\n//       id={props.key}\n//       key={props.key}\n//       onClick={props.categorySelect}\n//     > </div>\n//   )\n// }\n\n// Circle\n\nconst FragmentCircle = props => {\n  let circleClass = 'circle circle-unknown'; //navigation.css\n\n  if (props.discovered) {\n    circleClass = 'circle circle-discovered';\n  }\n  if (props.active) {\n    circleClass = 'circle circle-active';\n  }\n\n  if (props.highlighted) {\n    circleClass += ' circle-highlighted';\n  }\n\n  return (\n    <div\n      className={circleClass}\n      id={props.key}\n      key={props.key}\n      onClick={props.handleClick}\n    />\n  )\n}\n\n// Deault matrix\n\nconst buildMatrixState = (rowCount, rowLength) => {\n  const totalCircles = rowCount * rowLength;\n  const matrixState = {};\n\n  // Calculate details for each circle\n  for (let key = 1; key <= totalCircles; key++) {\n    const circleDetails = {\n      active: false,\n      discovered: false,\n      highlighted: false\n    };\n\n    matrixState[key] = circleDetails;\n  }\n  matrixState[activeId].active = true;\n\n  return matrixState;\n}\n\n// Class\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props)\n    const initialRowCount = 15;\n    const initialRowLength = 5;\n\n    this.state = {\n      rowCount: initialRowCount,\n      rowLength: initialRowLength,\n      matrix: buildMatrixState(initialRowCount, initialRowLength)\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  categoryHover(index) {\n    // if (index === 1) {\n    //   nature = CategoryNatureActive;\n    // } else if (index === 2) {\n    //   industrial = CategoryIndustrialActive;\n    // }\n  }\n\n  categorySelect(index) {\n    let matrix = this.state.matrix;\n    if (index === 0) {\n      for (let key = 1; key <= 75; key++) {\n        matrix[key].highlighted = false;\n      }\n    } else if (index === 1) {\n      for (let key = 0; key < category1.length; key++) {\n        matrix[category1[key]].highlighted = true;\n      }\n    }\n  }\n\n  handleClick(e) {\n    const matrix = this.state.matrix;\n    const id = e.target.id;\n\n    matrix[id].active = true;\n    matrix[activeId].active = false;\n    matrix[activeId].discovered = true;\n\n    this.setState({ matrix });\n    activeId = id;\n    this.props.handleIdChange(id);\n  }\n\n  rowBuilder(rowCount, rowLength, rows = []) {\n    this.categorySelect(1);\n    if (rowCount > 0) {\n      const circleKey = rowCount * rowLength;\n      rows.push(this.circleBuilder(circleKey, rowCount, rowLength));\n\n      return this.rowBuilder(rowCount - 1, rowLength, rows);\n    }\n    return rows\n  }\n\n  circleBuilder(circleKey, rowCount, rowLength, row = []) {\n    if (rowLength > 0) {\n      const circle = this.state.matrix[circleKey];\n\n      row.push(FragmentCircle({\n        key: circleKey,\n        active: circle.active,\n        discovered: circle.discovered,\n        highlighted: circle.highlighted,\n        handleClick: this.handleClick,\n      }));\n\n      return this.circleBuilder(circleKey - 1, rowCount, rowLength - 1, row);\n    }\n    return (<div key={'row-' + rowCount}>{row}</div>);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"navigation\">\n          <img src={Highlight} className=\"highlight\" />\n          {this.rowBuilder(this.state.rowCount, this.state.rowLength)}\n        </div>\n        <div className=\"cats\">\n          <img src={nature} className=\"category-nature\" onMouseOver={this.categoryHover(1)} onClick={this.categorySelect(1)} />\n          <img src={industrial} className=\"category-industrial\" onMouseOver={this.categoryHover(2)} onClick={this.categorySelect(1)} />\n          <img src={waterside} className=\"category-waterside\" onMouseOver={this.categoryHover(3)} onClick={this.categorySelect(1)} />\n          <img src={street} className=\"category-street\" onMouseOver={this.categoryHover(4)} onClick={this.categorySelect(0)} />\n          \n        </div>\n        <img src={Highlight} className=\"highlight\" />\n      </div>\n    )\n  }\n}\n\nexport default Navigation;"]},"metadata":{},"sourceType":"module"}