{"ast":null,"code":"var _jsxFileName = \"/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/ThreeStatic.js\";\nimport React from \"react\";\nimport * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport \"./three.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ThreeStatic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeId: props.dataAppToThreeStatic\n    }; //console.log(this.state);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    //console.log(props.dataAppToThreeStatic);\n    return {\n      activeId: props.dataAppToThreeStatic\n    };\n  }\n\n  threeRun(scene, camera) {\n    let activeId = this.state.activeId;\n    console.log(activeId);\n    var mouseX = 0,\n        mouseY = 0;\n    var windowHalfX = window.innerWidth / 2;\n    var windowHalfY = window.innerHeight / 2;\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setClearColor(0x000000, 1);\n    this.mount.appendChild(renderer.domElement); //\n    //\n    // OBJ LOADER & MODEL SETUP\n\n    var loadModel = function (url) {\n      return new Promise(resolve => {\n        new OBJLoader().load(url, resolve);\n      });\n    };\n\n    var myObjPromise;\n\n    if (activeId % 3 === 0) {\n      myObjPromise = loadModel('./data/strom-61669.obj');\n      console.log(\"strom\");\n    } else if (activeId % 3 === 1) {\n      myObjPromise = loadModel('./data/lavicka-61186.obj');\n      console.log(\"lavicka\");\n    } else {\n      myObjPromise = loadModel('./data/pozor-48737.obj');\n      console.log(\"pozor\");\n    }\n\n    myObjPromise.then(myObj => {\n      var material = myObj.children[0].material;\n      const circle = new THREE.TextureLoader().load('./data/circle.png');\n      material.size = 3;\n      material.sizeAttenuation = true;\n      material.map = circle;\n      material.alphaTest = 0.5;\n      material.transparent = true;\n      myObj.scale.x = 100;\n      myObj.scale.y = 100;\n      myObj.scale.z = 100;\n      scene.add(myObj);\n    }); //\n    //\n    // HELPER FUNCTIONS\n\n    var onWindowResize = function () {\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    var onDocumentMouseMove = function (event) {\n      mouseX = (-event.clientX + windowHalfX) / 2;\n      mouseY = (-event.clientY + windowHalfY) / 2;\n    };\n\n    document.addEventListener('mousemove', onDocumentMouseMove);\n    window.addEventListener('resize', onWindowResize); //\n    //\n    // ANIMATE\n\n    var animate = function () {\n      requestAnimationFrame(animate); // myObjPromise.then(myObj => {\n      //   scene.add( myObj );\n      // });\n\n      camera.position.x += (mouseX - camera.position.x) * .05;\n      camera.position.y += (-mouseY - camera.position.y) * .05;\n      camera.lookAt(scene.position);\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 2000);\n    camera.position.z = 250;\n    this.threeRun(scene, camera);\n  }\n\n  componentDidUpdate() {\n    this.threeRun(scene, camera);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.mount = ref,\n      className: \"object\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ThreeStatic;","map":{"version":3,"sources":["/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/ThreeStatic.js"],"names":["React","THREE","OBJLoader","ThreeStatic","Component","constructor","props","state","activeId","dataAppToThreeStatic","getDerivedStateFromProps","threeRun","scene","camera","console","log","mouseX","mouseY","windowHalfX","window","innerWidth","windowHalfY","innerHeight","renderer","WebGLRenderer","setSize","setPixelRatio","devicePixelRatio","setClearColor","mount","appendChild","domElement","loadModel","url","Promise","resolve","load","myObjPromise","then","myObj","material","children","circle","TextureLoader","size","sizeAttenuation","map","alphaTest","transparent","scale","x","y","z","add","onWindowResize","aspect","updateProjectionMatrix","onDocumentMouseMove","event","clientX","clientY","document","addEventListener","animate","requestAnimationFrame","position","lookAt","render","componentDidMount","Scene","PerspectiveCamera","componentDidUpdate","ref"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport \"./three.css\";\n\nclass ThreeStatic extends React.Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            activeId: props.dataAppToThreeStatic\n        }\n        //console.log(this.state);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        //console.log(props.dataAppToThreeStatic);\n        return {activeId: props.dataAppToThreeStatic}\n    }\n\n    threeRun(scene, camera) {\n        let activeId = this.state.activeId;\n        console.log(activeId);\n\n        var mouseX = 0, mouseY = 0;\n        var windowHalfX = window.innerWidth / 2;\n        var windowHalfY = window.innerHeight / 2;\n\n        var renderer = new THREE.WebGLRenderer();\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        renderer.setPixelRatio( window.devicePixelRatio );\n        renderer.setClearColor( 0x000000, 1);\n        this.mount.appendChild( renderer.domElement );\n\n        //\n        //\n        // OBJ LOADER & MODEL SETUP\n\n        var loadModel = function(url) {\n            return new Promise(resolve => {\n                new OBJLoader().load(url, resolve);\n            }); \n        }\n\n        var myObjPromise;\n\n        if (activeId % 3 === 0) {\n            myObjPromise = loadModel('./data/strom-61669.obj');\n            console.log(\"strom\");\n        } else if (activeId % 3 === 1) {\n            myObjPromise = loadModel('./data/lavicka-61186.obj');\n            console.log(\"lavicka\");\n        } else {\n            myObjPromise = loadModel('./data/pozor-48737.obj');\n            console.log(\"pozor\");\n        }\n\n        myObjPromise.then(myObj => {\n            var material = myObj.children[0].material;\n\n            const circle = new THREE.TextureLoader().load( './data/circle.png' );\n\n            material.size = 3;\n            material.sizeAttenuation = true;\n            material.map = circle;\n            material.alphaTest = 0.5;\n            material.transparent = true;\n\n            myObj.scale.x = 100;\n            myObj.scale.y = 100;\n            myObj.scale.z = 100;\n\n            scene.add(myObj);\n        });\n\n        //\n        //\n        // HELPER FUNCTIONS\n\n        var onWindowResize = function() {\n            windowHalfX = window.innerWidth / 2;\n            windowHalfY = window.innerHeight / 2;\n        \n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n        \n            renderer.setSize( window.innerWidth, window.innerHeight );\n        }\n        \n        var onDocumentMouseMove = function(event) {\n            mouseX = ( - event.clientX + windowHalfX ) / 2;\n            mouseY = ( - event.clientY + windowHalfY ) / 2;\n        }\n\n        document.addEventListener( 'mousemove', onDocumentMouseMove );\n        window.addEventListener( 'resize', onWindowResize );\n        \n        //\n        //\n        // ANIMATE\n\n        var animate = function () {\n            requestAnimationFrame( animate );\n            \n            // myObjPromise.then(myObj => {\n            //   scene.add( myObj );\n            // });\n\n            camera.position.x += ( mouseX - camera.position.x ) * .05;\n            camera.position.y += ( - mouseY - camera.position.y ) * .05;\n\n            camera.lookAt( scene.position );\n\n            renderer.render( scene, camera );\n        };\n\n        animate();\n    }\n\n    componentDidMount() {\n        var scene = new THREE.Scene();\n        var camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 );\n        camera.position.z = 250;\n        this.threeRun(scene, camera);\n    }\n\n    componentDidUpdate() {\n        this.threeRun(scene, camera);\n    }\n    render() {\n        return (\n            <div ref={ref => (this.mount = ref)} className = \"object\"/>\n        )\n    } \n}\n\nexport default ThreeStatic;"]},"metadata":{},"sourceType":"module"}