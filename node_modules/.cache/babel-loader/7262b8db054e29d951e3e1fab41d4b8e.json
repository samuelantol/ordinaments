{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.vhCheck = factory();\n})(this, function () {\n  'use strict';\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\n\n  var __assign = function () {\n    __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    return __assign.apply(this, arguments);\n  }; // don't know a better way to get the size of a CSS 100vh…\n\n\n  function createTestElement() {\n    var testElement = document.createElement('div');\n    testElement.style.cssText = 'position: fixed; top: 0; height: 100vh; pointer-events: none;';\n    document.documentElement.insertBefore(testElement, document.documentElement.firstChild);\n    return testElement;\n  }\n\n  function removeTestElement(element) {\n    document.documentElement.removeChild(element);\n  } //  in some browsers this will be bigger than window.innerHeight\n\n\n  function checkSizes() {\n    var vhTest = createTestElement();\n    var windowHeight = window.innerHeight;\n    var vh = vhTest.offsetHeight;\n    var offset = vh - windowHeight;\n    removeTestElement(vhTest);\n    return {\n      vh: vh,\n      windowHeight: windowHeight,\n      offset: offset,\n      isNeeded: offset !== 0,\n      value: 0\n    };\n  } // export\n\n\n  function noop() {}\n\n  function computeDifference() {\n    var sizes = checkSizes();\n    sizes.value = sizes.offset;\n    return sizes;\n  }\n\n  function redefineVhUnit() {\n    var sizes = checkSizes();\n    sizes.value = sizes.windowHeight * 0.01;\n    return sizes;\n  }\n\n  var methods = /*#__PURE__*/Object.freeze({\n    noop: noop,\n    computeDifference: computeDifference,\n    redefineVhUnit: redefineVhUnit\n  });\n\n  function isString(text) {\n    return typeof text === \"string\" && text.length > 0;\n  }\n\n  function isFunction(f) {\n    return typeof f === \"function\";\n  }\n\n  var defaultOptions = Object.freeze({\n    cssVarName: 'vh-offset',\n    redefineVh: false,\n    method: computeDifference,\n    force: false,\n    bind: true,\n    updateOnTouch: false,\n    onUpdate: noop\n  });\n\n  function getOptions(options) {\n    // old options handling: only redefine the CSS var name\n    if (isString(options)) {\n      return __assign({}, defaultOptions, {\n        cssVarName: options\n      });\n    } // be sure to have a configuration object\n\n\n    if (typeof options !== 'object') return defaultOptions; // make sure we have the right options to start with\n\n    var finalOptions = {\n      force: options.force === true,\n      bind: options.bind !== false,\n      updateOnTouch: options.updateOnTouch === true,\n      onUpdate: isFunction(options.onUpdate) ? options.onUpdate : noop\n    }; // method change\n\n    var redefineVh = options.redefineVh === true;\n    finalOptions.method = methods[redefineVh ? 'redefineVhUnit' : 'computeDifference'];\n    finalOptions.cssVarName = isString(options.cssVarName) ? options.cssVarName : redefineVh ?\n    /*\r\n    when redefining vh unit we follow this article name convention\r\n    https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\r\n    */\n    'vh' : defaultOptions.cssVarName;\n    return finalOptions;\n  } // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n\n\n  var passiveSupported = false;\n  var eventListeners = [];\n  /* istanbul ignore next */\n\n  try {\n    var options = Object.defineProperty({}, \"passive\", {\n      get: function () {\n        passiveSupported = true;\n      }\n    });\n    window.addEventListener(\"test\", options, options);\n    window.removeEventListener(\"test\", options, options);\n  } catch (err) {\n    passiveSupported = false;\n  }\n\n  function addListener(eventName, callback) {\n    eventListeners.push({\n      eventName: eventName,\n      callback: callback\n    });\n    window.addEventListener(eventName, callback,\n    /* istanbul ignore next */\n    passiveSupported ? {\n      passive: true\n    } : false);\n  }\n\n  function removeAll() {\n    eventListeners.forEach(function (config) {\n      window.removeEventListener(config.eventName, config.callback);\n    });\n    eventListeners = [];\n  }\n\n  function updateCssVar(cssVarName, result) {\n    document.documentElement.style.setProperty(\"--\" + cssVarName, result.value + \"px\");\n  }\n\n  function formatResult(sizes, options) {\n    return __assign({}, sizes, {\n      unbind: removeAll,\n      recompute: options.method\n    });\n  }\n\n  function vhCheck(options) {\n    var config = Object.freeze(getOptions(options));\n    var result = formatResult(config.method(), config); // usefulness check\n\n    if (!result.isNeeded && !config.force) {\n      return result;\n    }\n\n    updateCssVar(config.cssVarName, result);\n    config.onUpdate(result); // enabled by default\n\n    if (!config.bind) return result;\n\n    function onWindowChange() {\n      window.requestAnimationFrame(function () {\n        var sizes = config.method();\n        updateCssVar(config.cssVarName, sizes);\n        config.onUpdate(formatResult(sizes, config));\n      });\n    } // be sure we don't duplicates events listeners\n\n\n    result.unbind(); // listen for orientation change\n    // - this can't be configured\n    // - because it's convenient and not a real performance bottleneck\n\n    addListener('orientationchange', onWindowChange); // listen to touch move for scrolling\n    // – disabled by default\n    // - listening to scrolling can be expansive…\n\n    if (config.updateOnTouch) {\n      addListener('touchmove', onWindowChange);\n    }\n\n    return result;\n  }\n\n  return vhCheck;\n});","map":{"version":3,"sources":["/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/node_modules/vh-check/dist/vh-check.js"],"names":["global","factory","exports","module","define","amd","vhCheck","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","createTestElement","testElement","document","createElement","style","cssText","documentElement","insertBefore","firstChild","removeTestElement","element","removeChild","checkSizes","vhTest","windowHeight","window","innerHeight","vh","offsetHeight","offset","isNeeded","value","noop","computeDifference","sizes","redefineVhUnit","methods","freeze","isString","text","isFunction","f","defaultOptions","cssVarName","redefineVh","method","force","bind","updateOnTouch","onUpdate","getOptions","options","finalOptions","passiveSupported","eventListeners","defineProperty","get","addEventListener","removeEventListener","err","addListener","eventName","callback","push","passive","removeAll","forEach","config","updateCssVar","result","setProperty","formatResult","unbind","recompute","onWindowChange","requestAnimationFrame"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.vhCheck = factory());\n}(this, (function () { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    // don't know a better way to get the size of a CSS 100vh…\r\n    function createTestElement() {\r\n        var testElement = document.createElement('div');\r\n        testElement.style.cssText =\r\n            'position: fixed; top: 0; height: 100vh; pointer-events: none;';\r\n        document.documentElement.insertBefore(testElement, document.documentElement.firstChild);\r\n        return testElement;\r\n    }\r\n    function removeTestElement(element) {\r\n        document.documentElement.removeChild(element);\r\n    }\r\n    //  in some browsers this will be bigger than window.innerHeight\r\n    function checkSizes() {\r\n        var vhTest = createTestElement();\r\n        var windowHeight = window.innerHeight;\r\n        var vh = vhTest.offsetHeight;\r\n        var offset = vh - windowHeight;\r\n        removeTestElement(vhTest);\r\n        return {\r\n            vh: vh,\r\n            windowHeight: windowHeight,\r\n            offset: offset,\r\n            isNeeded: offset !== 0,\r\n            value: 0,\r\n        };\r\n    }\r\n    // export\r\n    function noop() { }\r\n    function computeDifference() {\r\n        var sizes = checkSizes();\r\n        sizes.value = sizes.offset;\r\n        return sizes;\r\n    }\r\n    function redefineVhUnit() {\r\n        var sizes = checkSizes();\r\n        sizes.value = sizes.windowHeight * 0.01;\r\n        return sizes;\r\n    }\n\n    var methods = /*#__PURE__*/Object.freeze({\n        noop: noop,\n        computeDifference: computeDifference,\n        redefineVhUnit: redefineVhUnit\n    });\n\n    function isString(text) {\r\n        return typeof text === \"string\" && text.length > 0;\r\n    }\r\n    function isFunction(f) {\r\n        return typeof f === \"function\";\r\n    }\r\n    var defaultOptions = Object.freeze({\r\n        cssVarName: 'vh-offset',\r\n        redefineVh: false,\r\n        method: computeDifference,\r\n        force: false,\r\n        bind: true,\r\n        updateOnTouch: false,\r\n        onUpdate: noop,\r\n    });\r\n    function getOptions(options) {\r\n        // old options handling: only redefine the CSS var name\r\n        if (isString(options)) {\r\n            return __assign({}, defaultOptions, { cssVarName: options });\r\n        }\r\n        // be sure to have a configuration object\r\n        if (typeof options !== 'object')\r\n            return defaultOptions;\r\n        // make sure we have the right options to start with\r\n        var finalOptions = {\r\n            force: options.force === true,\r\n            bind: options.bind !== false,\r\n            updateOnTouch: options.updateOnTouch === true,\r\n            onUpdate: isFunction(options.onUpdate) ? options.onUpdate : noop,\r\n        };\r\n        // method change\r\n        var redefineVh = options.redefineVh === true;\r\n        finalOptions.method =\r\n            methods[redefineVh ? 'redefineVhUnit' : 'computeDifference'];\r\n        finalOptions.cssVarName = isString(options.cssVarName)\r\n            ? options.cssVarName\r\n            : redefineVh\r\n                ? /*\r\n                  when redefining vh unit we follow this article name convention\r\n                  https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\r\n                */\r\n                    'vh'\r\n                : defaultOptions.cssVarName;\r\n        return finalOptions;\r\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\n    var passiveSupported = false;\r\n    var eventListeners = [];\r\n    /* istanbul ignore next */\r\n    try {\r\n        var options = Object.defineProperty({}, \"passive\", {\r\n            get: function () {\r\n                passiveSupported = true;\r\n            },\r\n        });\r\n        window.addEventListener(\"test\", options, options);\r\n        window.removeEventListener(\"test\", options, options);\r\n    }\r\n    catch (err) {\r\n        passiveSupported = false;\r\n    }\r\n    function addListener(eventName, callback) {\r\n        eventListeners.push({\r\n            eventName: eventName,\r\n            callback: callback,\r\n        });\r\n        window.addEventListener(eventName, callback, \r\n        /* istanbul ignore next */\r\n        passiveSupported ? { passive: true } : false);\r\n    }\r\n    function removeAll() {\r\n        eventListeners.forEach(function (config) {\r\n            window.removeEventListener(config.eventName, config.callback);\r\n        });\r\n        eventListeners = [];\r\n    }\n\n    function updateCssVar(cssVarName, result) {\r\n        document.documentElement.style.setProperty(\"--\" + cssVarName, result.value + \"px\");\r\n    }\r\n    function formatResult(sizes, options) {\r\n        return __assign({}, sizes, { unbind: removeAll, recompute: options.method });\r\n    }\r\n    function vhCheck(options) {\r\n        var config = Object.freeze(getOptions(options));\r\n        var result = formatResult(config.method(), config);\r\n        // usefulness check\r\n        if (!result.isNeeded && !config.force) {\r\n            return result;\r\n        }\r\n        updateCssVar(config.cssVarName, result);\r\n        config.onUpdate(result);\r\n        // enabled by default\r\n        if (!config.bind)\r\n            return result;\r\n        function onWindowChange() {\r\n            window.requestAnimationFrame(function () {\r\n                var sizes = config.method();\r\n                updateCssVar(config.cssVarName, sizes);\r\n                config.onUpdate(formatResult(sizes, config));\r\n            });\r\n        }\r\n        // be sure we don't duplicates events listeners\r\n        result.unbind();\r\n        // listen for orientation change\r\n        // - this can't be configured\r\n        // - because it's convenient and not a real performance bottleneck\r\n        addListener('orientationchange', onWindowChange);\r\n        // listen to touch move for scrolling\r\n        // – disabled by default\r\n        // - listening to scrolling can be expansive…\r\n        if (config.updateOnTouch) {\r\n            addListener('touchmove', onWindowChange);\r\n        }\r\n        return result;\r\n    }\n\n    return vhCheck;\n\n})));\n"]},"metadata":{},"sourceType":"script"}