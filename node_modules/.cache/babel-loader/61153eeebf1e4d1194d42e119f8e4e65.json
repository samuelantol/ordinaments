{"ast":null,"code":"var _jsxFileName = \"/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/App.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nOBJLoader(THREE);\n\nclass App extends React.Component {\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 2000);\n    camera.position.z = 5;\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.mount.appendChild(renderer.domElement);\n    var geometry = new THREE.BoxGeometry(1, 1, 1);\n    var material = new THREE.MeshStandardMaterial({\n      color: 0x7e31eb\n    });\n    var cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    var objLoader = new OBJLoader();\n    objLoader.load(\"./data/strom-61669.obj\", object => {\n      this.freedomMesh = object;\n      this.freedomMesh.position.setY(3); //or  this\n\n      this.freedomMesh.scale.set(0.02, 0.02, 0.02);\n      this.scene.add(this.freedomMesh);\n    }, xhr => {\n      console.log(xhr.loaded / xhr.total * 100 + \"% loaded\");\n    }, // called when loading has errors\n    error => {\n      console.log(\"An error happened\" + error);\n    });\n    const light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);\n    scene.add(light);\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      cube.rotation.z += 0.01;\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.mount = ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 59,\n  columnNumber: 17\n}, this), rootElement);\nexport default App;","map":{"version":3,"sources":["/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/App.js"],"names":["React","ReactDOM","THREE","OBJLoader","App","Component","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","setSize","mount","appendChild","domElement","geometry","BoxGeometry","material","MeshStandardMaterial","color","cube","Mesh","add","objLoader","load","object","freedomMesh","setY","scale","set","xhr","console","log","loaded","total","error","light","HemisphereLight","animate","requestAnimationFrame","rotation","x","y","render","ref","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nOBJLoader(THREE);\n\nclass App extends React.Component {\n    componentDidMount() {\n        var scene = new THREE.Scene();\n        var camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 );\n        camera.position.z = 5;\n\n        var renderer = new THREE.WebGLRenderer();\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        this.mount.appendChild( renderer.domElement );\n      \n        var geometry = new THREE.BoxGeometry( 1, 1, 1 );\n        var material = new THREE.MeshStandardMaterial( { color: 0x7e31eb } );\n        var cube = new THREE.Mesh( geometry, material );\n        scene.add( cube );\n\n        var objLoader = new OBJLoader();\n        objLoader.load( \"./data/strom-61669.obj\",\n            object => {\n                this.freedomMesh = object;\n                this.freedomMesh.position.setY(3); //or  this\n                this.freedomMesh.scale.set(0.02, 0.02, 0.02);\n                this.scene.add(this.freedomMesh);\n            },\n            xhr => {\n                console.log((xhr.loaded / xhr.total) * 100 + \"% loaded\");\n            },\n            // called when loading has errors\n            error => {\n                console.log(\"An error happened\" + error);\n            }\n        );\n\n        const light = new THREE.HemisphereLight( 0xffffbb, 0x080820, 1 );\n        scene.add( light );\n        \n        var animate = function () {\n            requestAnimationFrame( animate );\n            cube.rotation.x += 0.01;\n            cube.rotation.y += 0.01;\n            cube.rotation.z += 0.01;\n            \n            renderer.render( scene, camera );\n        };\n\n        animate();\n    }\n    render() {\n        return (\n            <div ref={ref => (this.mount = ref)} />\n        )\n    }\n}const rootElement = document.getElementById(\"root\")\nReactDOM.render(<App />, rootElement);\nexport default App;"]},"metadata":{},"sourceType":"module"}