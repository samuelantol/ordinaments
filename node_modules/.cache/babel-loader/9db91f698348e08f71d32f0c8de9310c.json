{"ast":null,"code":"var _jsxFileName = \"/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/Map.js\";\nimport React, { useRef, useEffect } from 'react';\nimport mapboxgl, { FreeCameraOptions } from 'mapbox-gl';\nimport './map.css'; //let activeId = 38;\n//let discoveredIds = {};\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet locationLon = [0.0, 48.148711, 48.1111, 45.132123, 12.122, 17.2222, 2.222];\nlet locationLat = [0.0, 17.090743, 17.0800, 16.9992, 18.222, 16.887, 7.2];\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2FtLWFudCIsImEiOiJSLUx1SURJIn0.QTPlnr_Xse6dYc96m47H4A'; // class Map extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       activeId: props.dataAppToMap,\n//     }\n//   }\n//   static getDerivedStateFromProps(props, state) {\n//     activeId = props.dataAppToMap;\n//     return {activeId: props.dataAppToMap}\n//   }\n//   // componentDidMount() {\n//   //   MapBox();\n//   // }\n//   // componentDidUpdate() {\n//   //   MapBox()\n//   // }\n// }\n// const Map = () => {\n//   const mapContainerRef = useRef(null);\n//   // initialize map when component mounts\n//   useEffect(() => {\n//     const map = new mapboxgl.Map({\n//       container: mapContainerRef.current,\n//       style: 'mapbox://styles/sam-ant/cknyvea7s1tmy17pj49f2i8gl',\n//       center: [locationLat[activeId%7], locationLon[activeId%7]],\n//       zoom: 16,\n//     });\n//     // add navigation control (the +/- zoom buttons)\n//     //map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n//     // clean up on unmount\n//     return () => map.remove();\n//   }, []); // eslint-disable-line react-hooks/exhaustive-deps\n//   return <div className=\"map-container\" ref={mapContainerRef} />;\n// };\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeId: props.dataAppToMap,\n      mapContainerRef: useRef(null)\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      activeId: props.dataAppToMap\n    };\n  }\n\n  mapBackground() {\n    this.map = new mapboxgl.Map({\n      container: 'div',\n      style: 'mapbox://styles/sam-ant/cknyvea7s1tmy17pj49f2i8gl',\n      center: [locationLat[this.state.activeId % 7], locationLon[this.state.activeId % 7]],\n      zoom: 16\n    });\n  }\n\n  componentDidMount() {\n    this.mapBackground();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/Map.js"],"names":["React","useRef","useEffect","mapboxgl","FreeCameraOptions","locationLon","locationLat","accessToken","Map","Component","constructor","props","state","activeId","dataAppToMap","mapContainerRef","getDerivedStateFromProps","mapBackground","map","container","style","center","zoom","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,QAAP,IAAmBC,iBAAnB,QAA4C,WAA5C;AACA,OAAO,WAAP,C,CAEA;AACA;;;AACA,IAAIC,WAAW,GAAG,CAAC,GAAD,EAAM,SAAN,EAAiB,OAAjB,EAA0B,SAA1B,EAAqC,MAArC,EAA6C,OAA7C,EAAsD,KAAtD,CAAlB;AACA,IAAIC,WAAW,GAAG,CAAC,GAAD,EAAM,SAAN,EAAiB,OAAjB,EAA0B,OAA1B,EAAmC,MAAnC,EAA2C,MAA3C,EAAmD,GAAnD,CAAlB;AAEAH,QAAQ,CAACI,WAAT,GAAuB,mEAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEF,KAAK,CAACG,YADL;AAEXC,MAAAA,eAAe,EAAEd,MAAM,CAAC,IAAD;AAFZ,KAAb;AAID;;AAE8B,SAAxBe,wBAAwB,CAACL,KAAD,EAAQC,KAAR,EAAe;AAC5C,WAAO;AAACC,MAAAA,QAAQ,EAAEF,KAAK,CAACG;AAAjB,KAAP;AACD;;AAEDG,EAAAA,aAAa,GAAG;AACd,SAAKC,GAAL,GAAW,IAAIf,QAAQ,CAACK,GAAb,CAAiB;AAC1BW,MAAAA,SAAS,EAAE,KADe;AAE1BC,MAAAA,KAAK,EAAE,mDAFmB;AAG1BC,MAAAA,MAAM,EAAE,CAACf,WAAW,CAAC,KAAKM,KAAL,CAAWC,QAAX,GAAoB,CAArB,CAAZ,EAAqCR,WAAW,CAAC,KAAKO,KAAL,CAAWC,QAAX,GAAoB,CAArB,CAAhD,CAHkB;AAI1BS,MAAAA,IAAI,EAAE;AAJoB,KAAjB,CAAX;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,aAAL;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AA5B+B;;AA+BlC,eAAehB,GAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport mapboxgl, { FreeCameraOptions } from 'mapbox-gl';\nimport './map.css';\n\n//let activeId = 38;\n//let discoveredIds = {};\nlet locationLon = [0.0, 48.148711, 48.1111, 45.132123, 12.122, 17.2222, 2.222];\nlet locationLat = [0.0, 17.090743, 17.0800, 16.9992, 18.222, 16.887, 7.2];\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2FtLWFudCIsImEiOiJSLUx1SURJIn0.QTPlnr_Xse6dYc96m47H4A';\n\n// class Map extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       activeId: props.dataAppToMap,\n//     }\n//   }\n\n//   static getDerivedStateFromProps(props, state) {\n//     activeId = props.dataAppToMap;\n//     return {activeId: props.dataAppToMap}\n//   }\n\n//   // componentDidMount() {\n//   //   MapBox();\n//   // }\n\n//   // componentDidUpdate() {\n//   //   MapBox()\n//   // }\n// }\n\n// const Map = () => {\n//   const mapContainerRef = useRef(null);\n\n//   // initialize map when component mounts\n//   useEffect(() => {\n//     const map = new mapboxgl.Map({\n//       container: mapContainerRef.current,\n//       style: 'mapbox://styles/sam-ant/cknyvea7s1tmy17pj49f2i8gl',\n//       center: [locationLat[activeId%7], locationLon[activeId%7]],\n//       zoom: 16,\n//     });\n\n//     // add navigation control (the +/- zoom buttons)\n//     //map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n\n//     // clean up on unmount\n//     return () => map.remove();\n//   }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n//   return <div className=\"map-container\" ref={mapContainerRef} />;\n// };\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeId: props.dataAppToMap,\n      mapContainerRef: useRef(null),\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {activeId: props.dataAppToMap}\n  }\n  \n  mapBackground() {\n    this.map = new mapboxgl.Map({\n      container: 'div',\n      style: 'mapbox://styles/sam-ant/cknyvea7s1tmy17pj49f2i8gl',\n      center: [locationLat[this.state.activeId%7], locationLon[this.state.activeId%7]],\n      zoom: 16\n    })\n  }\n\n  componentDidMount() {\n    this.mapBackground();\n  }\n\n  render() {\n    return <div className=\"map-container\" />\n  }\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}