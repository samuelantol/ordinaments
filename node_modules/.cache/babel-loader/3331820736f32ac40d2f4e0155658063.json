{"ast":null,"code":"var _jsxFileName = \"/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/ThreeMusic.js\";\nimport React from \"react\";\nimport * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport SimplexNoise from \"simplex-noise\";\nimport \"./three.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet scene = new THREE.Scene();\nlet camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 2000);\nlet renderer = new THREE.WebGLRenderer({\n  alpha: true\n});\nvar myObjPromise, myObjPromiseOriginal;\ncamera.position.z = 250;\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.setPixelRatio(window.devicePixelRatio);\nrenderer.setClearColor(0x000000, 1);\n\nclass ThreeStatic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeId: props.dataAppToThreeStatic // scene: new THREE.Scene(),\n      // camera: new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 ),\n      // renderer: new THREE.WebGLRenderer( { alpha: true } )\n\n    }; // this.state.camera.position.z =250;\n    // this.state.renderer.setSize( window.innerWidth, window.innerHeight );\n    // this.state.renderer.setPixelRatio( window.devicePixelRatio );\n    // this.state.renderer.setClearColor( 0x000000, 1);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      activeId: props.dataAppToThreeMusic\n    };\n  }\n\n  threeObject() {\n    // this.state.scene = new THREE.Scene();  // TOTO TREBA OPRAVIT\n    // var scene = this.state.scene;\n    // var camera = this.state.camera;\n    // var renderer = this.state.renderer;\n    // this.mount.appendChild( this.state.renderer.domElement );\n    var activeId = this.state.activeId;\n    var mouseX = 0,\n        mouseY = 0;\n    var windowHalfX = window.innerWidth / 2;\n    var windowHalfY = window.innerHeight / 2;\n    var noise = new SimplexNoise(); // AUDIO\n\n    var context = new AudioContext();\n    var analyser = context.createAnalyser();\n    analyser.fftSize = 256;\n    analyser.connect(context.destination);\n    var dataArray = new Uint8Array(analyser.frequencyBinCount);\n\n    var callback = function (stream) {\n      var mic = context.createMediaStreamSource(stream);\n      mic.connect(analyser);\n    };\n\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n    navigator.getUserMedia({\n      video: false,\n      audio: true\n    }, callback, console.log); //\n    //\n    // OBJ LOADER & MODEL SETUP\n\n    const objSize = 61669;\n\n    var loadModel = function (url) {\n      return new Promise(resolve => {\n        new OBJLoader().load(url, resolve);\n      });\n    }; // var myObjPromise, myObjPromiseOriginal;\n    // console.log(activeId);\n\n\n    if (activeId % 7 === 0) {\n      myObjPromise = loadModel('./data/strom-61669.obj');\n      myObjPromiseOriginal = loadModel('./data/strom-61669.obj');\n    } else if (activeId % 7 === 1) {\n      myObjPromise = loadModel('./data/lavicka-61186.obj');\n      myObjPromiseOriginal = loadModel('./data/lavicka-61186.obj');\n    } else if (activeId % 3 === 2) {\n      myObjPromise = loadModel('./data/pozor-48737.obj');\n      myObjPromiseOriginal = loadModel('./data/pozor-48737.obj');\n    } else if (activeId % 7 === 3) {\n      myObjPromise = loadModel('./data/1.obj');\n      myObjPromiseOriginal = loadModel('./data/1.obj');\n    } else if (activeId % 7 === 4) {\n      myObjPromise = loadModel('./data/2.obj');\n      myObjPromiseOriginal = loadModel('./data/2.obj');\n    } else if (activeId % 7 === 5) {\n      myObjPromise = loadModel('./data/3.obj');\n      myObjPromiseOriginal = loadModel('./data/3.obj');\n    } else {\n      myObjPromise = loadModel('./data/4.obj');\n      myObjPromiseOriginal = loadModel('./data/4.obj');\n    }\n\n    myObjPromise.then(myObj => {\n      var material = myObj.children[0].material;\n      const circle = new THREE.TextureLoader().load('./data/circle.png');\n      material.size = 3;\n      material.sizeAttenuation = true;\n      material.map = circle;\n      material.alphaTest = 0.5;\n      material.transparent = true;\n      myObj.scale.x = 100;\n      myObj.scale.y = 100;\n      myObj.scale.z = 100;\n      scene.add(myObj);\n    }); //\n    //\n    // HELPER FUNCTIONS\n\n    var onWindowResize = function () {\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    var onDocumentMouseMove = function (event) {\n      mouseX = (-event.clientX + windowHalfX) / 2;\n      mouseY = (-event.clientY + windowHalfY) / 2;\n    };\n\n    document.addEventListener('mousemove', onDocumentMouseMove);\n    window.addEventListener('resize', onWindowResize);\n\n    var fractionate = function (val, minVal, maxVal) {\n      return (val - minVal) / (maxVal - minVal);\n    };\n\n    var modulate = function (val, minVal, maxVal, outMin, outMax) {\n      var fr = fractionate(val, minVal, maxVal);\n      var delta = outMax - outMin;\n      return outMin + fr * delta;\n    }; //\n    //\n    // ANIMATE\n\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      analyser.getByteFrequencyData(dataArray);\n      var lowerHalfArray = dataArray.slice(0, dataArray.length / 2 - 1); // var upperHalfArray = dataArray.slice((dataArray.length/2) - 1, dataArray.length - 1);\n\n      var lowerSum = lowerHalfArray.reduce((a, b) => a + b, 0);\n      var lowerLength = lowerHalfArray.length;\n      var lowerAvg = lowerSum / lowerLength || 0;\n      var lowerAvgFr = lowerAvg / lowerLength;\n      var distortionFr = modulate(lowerAvgFr, 0, 1, 0, 4);\n      myObjPromise.then(myObj => {\n        const positions = myObj.children[0].geometry.attributes.position.array;\n        myObj.scale.x = 100;\n        myObj.scale.y = 100;\n        myObj.scale.z = 100;\n        myObjPromiseOriginal.then(myObj2 => {\n          scene.add(myObj);\n          const positions2 = myObj2.children[0].geometry.attributes.position.array;\n          myObj2.scale.x = 100;\n          myObj2.scale.y = 100;\n          myObj2.scale.z = 100;\n\n          for (let i = 0; i < objSize; i++) {\n            // var offset = 20;\n            var amp = 0.5;\n            var time = window.performance.now();\n            var vertex = new THREE.Vector3(positions2[i * 3], positions2[i * 3 + 1], positions2[i * 3 + 2]);\n            var distance = (noise.noise2D(vertex.x + time * 0.0003, vertex.y + time * 0.0001) + 0) * distortionFr * amp; // positions[i*3] = vertex.x + distance;\n            // positions[i*3+1] = vertex.y + distance;\n\n            positions[i * 3 + 2] = vertex.z + distance * vertex.z;\n          }\n        });\n        myObj.children[0].geometry.attributes.position.needsUpdate = true;\n      });\n      camera.position.x += (mouseX - camera.position.x) * .05;\n      camera.position.y += (-mouseY - camera.position.y) * .05;\n      camera.lookAt(scene.position);\n      renderer.render(scene, camera);\n    };\n\n    animate();\n    return () => myObjPromise.remove();\n  }\n\n  componentDidMount() {\n    if (myObjPromise === null) {\n      this.mount.appendChild(renderer.domElement);\n    } else {\n      myObjPromise.then(myObj => {\n        scene.remove(myObj);\n      });\n    }\n\n    this.threeObject();\n  }\n\n  componentDidUpdate() {\n    myObjPromise.then(myObj => {\n      scene.remove(myObj);\n    });\n    this.threeObject();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.mount = ref,\n      className: \"object\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ThreeStatic;","map":{"version":3,"sources":["/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/ThreeMusic.js"],"names":["React","THREE","OBJLoader","SimplexNoise","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","alpha","myObjPromise","myObjPromiseOriginal","position","z","setSize","setPixelRatio","devicePixelRatio","setClearColor","ThreeStatic","Component","constructor","props","state","activeId","dataAppToThreeStatic","getDerivedStateFromProps","dataAppToThreeMusic","threeObject","mouseX","mouseY","windowHalfX","windowHalfY","noise","context","AudioContext","analyser","createAnalyser","fftSize","connect","destination","dataArray","Uint8Array","frequencyBinCount","callback","stream","mic","createMediaStreamSource","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","video","audio","console","log","objSize","loadModel","url","Promise","resolve","load","then","myObj","material","children","circle","TextureLoader","size","sizeAttenuation","map","alphaTest","transparent","scale","x","y","add","onWindowResize","aspect","updateProjectionMatrix","onDocumentMouseMove","event","clientX","clientY","document","addEventListener","fractionate","val","minVal","maxVal","modulate","outMin","outMax","fr","delta","animate","requestAnimationFrame","getByteFrequencyData","lowerHalfArray","slice","length","lowerSum","reduce","a","b","lowerLength","lowerAvg","lowerAvgFr","distortionFr","positions","geometry","attributes","array","myObj2","positions2","i","amp","time","performance","now","vertex","Vector3","distance","noise2D","needsUpdate","lookAt","render","remove","componentDidMount","mount","appendChild","domElement","componentDidUpdate","ref"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,sCAA1B;AACA,OAAOC,YAAP,MAAwB,eAAxB;AACA,OAAO,aAAP;;AAEA,IAAIC,KAAK,GAAG,IAAIH,KAAK,CAACI,KAAV,EAAZ;AACA,IAAIC,MAAM,GAAG,IAAIL,KAAK,CAACM,iBAAV,CAA6B,EAA7B,EAAiCC,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAA5D,EAAyE,CAAzE,EAA4E,IAA5E,CAAb;AACA,IAAIC,QAAQ,GAAG,IAAIV,KAAK,CAACW,aAAV,CAAyB;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAzB,CAAf;AAEA,IAAIC,YAAJ,EAAkBC,oBAAlB;AAEAT,MAAM,CAACU,QAAP,CAAgBC,CAAhB,GAAmB,GAAnB;AAEAN,QAAQ,CAACO,OAAT,CAAkBV,MAAM,CAACC,UAAzB,EAAqCD,MAAM,CAACE,WAA5C;AACAC,QAAQ,CAACQ,aAAT,CAAwBX,MAAM,CAACY,gBAA/B;AACAT,QAAQ,CAACU,aAAT,CAAwB,QAAxB,EAAkC,CAAlC;;AAEA,MAAMC,WAAN,SAA0BtB,KAAK,CAACuB,SAAhC,CAA0C;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAEF,KAAK,CAACG,oBADP,CAET;AACA;AACA;;AAJS,KAAb,CAFe,CAQf;AAEA;AACA;AACA;AACH;;AAE8B,SAAxBC,wBAAwB,CAACJ,KAAD,EAAQC,KAAR,EAAe;AAC1C,WAAO;AAACC,MAAAA,QAAQ,EAAEF,KAAK,CAACK;AAAjB,KAAP;AACH;;AAEDC,EAAAA,WAAW,GAAG;AACV;AACA;AACA;AACA;AAEA;AAEA,QAAIJ,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA1B;AAEA,QAAIK,MAAM,GAAG,CAAb;AAAA,QAAgBC,MAAM,GAAG,CAAzB;AACA,QAAIC,WAAW,GAAG1B,MAAM,CAACC,UAAP,GAAoB,CAAtC;AACA,QAAI0B,WAAW,GAAG3B,MAAM,CAACE,WAAP,GAAqB,CAAvC;AAEA,QAAI0B,KAAK,GAAG,IAAIjC,YAAJ,EAAZ,CAdU,CAgBV;;AACA,QAAIkC,OAAO,GAAG,IAAIC,YAAJ,EAAd;AACA,QAAIC,QAAQ,GAAGF,OAAO,CAACG,cAAR,EAAf;AACAD,IAAAA,QAAQ,CAACE,OAAT,GAAmB,GAAnB;AACAF,IAAAA,QAAQ,CAACG,OAAT,CAAiBL,OAAO,CAACM,WAAzB;AAEA,QAAIC,SAAS,GAAG,IAAIC,UAAJ,CAAeN,QAAQ,CAACO,iBAAxB,CAAhB;;AAEA,QAAIC,QAAQ,GAAG,UAASC,MAAT,EAAiB;AAC5B,UAAIC,GAAG,GAAGZ,OAAO,CAACa,uBAAR,CAAgCF,MAAhC,CAAV;AACAC,MAAAA,GAAG,CAACP,OAAJ,CAAYH,QAAZ;AACH,KAHD;;AAKAY,IAAAA,SAAS,CAACC,YAAV,GAAyBD,SAAS,CAACC,YAAV,IAA0BD,SAAS,CAACE,kBAApC,IAA0DF,SAAS,CAACG,eAA7F;AACAH,IAAAA,SAAS,CAACC,YAAV,CAAuB;AAAEG,MAAAA,KAAK,EAAG,KAAV;AAAiBC,MAAAA,KAAK,EAAG;AAAzB,KAAvB,EAAwDT,QAAxD,EAAkEU,OAAO,CAACC,GAA1E,EA9BU,CAiCV;AACA;AACA;;AAEA,UAAMC,OAAO,GAAG,KAAhB;;AAEA,QAAIC,SAAS,GAAG,UAASC,GAAT,EAAc;AAC1B,aAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1B,YAAI7D,SAAJ,GAAgB8D,IAAhB,CAAqBH,GAArB,EAA0BE,OAA1B;AACH,OAFM,CAAP;AAGH,KAJD,CAvCU,CA6CV;AACA;;;AAEA,QAAIpC,QAAQ,GAAG,CAAX,KAAiB,CAArB,EAAwB;AACpBb,MAAAA,YAAY,GAAG8C,SAAS,CAAC,wBAAD,CAAxB;AACA7C,MAAAA,oBAAoB,GAAG6C,SAAS,CAAC,wBAAD,CAAhC;AACH,KAHD,MAGO,IAAIjC,QAAQ,GAAG,CAAX,KAAiB,CAArB,EAAwB;AAC3Bb,MAAAA,YAAY,GAAG8C,SAAS,CAAC,0BAAD,CAAxB;AACA7C,MAAAA,oBAAoB,GAAG6C,SAAS,CAAC,0BAAD,CAAhC;AACH,KAHM,MAGA,IAAIjC,QAAQ,GAAG,CAAX,KAAiB,CAArB,EAAwB;AAC3Bb,MAAAA,YAAY,GAAG8C,SAAS,CAAC,wBAAD,CAAxB;AACA7C,MAAAA,oBAAoB,GAAG6C,SAAS,CAAC,wBAAD,CAAhC;AACH,KAHM,MAGA,IAAIjC,QAAQ,GAAG,CAAX,KAAiB,CAArB,EAAwB;AAC3Bb,MAAAA,YAAY,GAAG8C,SAAS,CAAC,cAAD,CAAxB;AACA7C,MAAAA,oBAAoB,GAAG6C,SAAS,CAAC,cAAD,CAAhC;AACH,KAHM,MAGA,IAAIjC,QAAQ,GAAG,CAAX,KAAiB,CAArB,EAAwB;AAC3Bb,MAAAA,YAAY,GAAG8C,SAAS,CAAC,cAAD,CAAxB;AACA7C,MAAAA,oBAAoB,GAAG6C,SAAS,CAAC,cAAD,CAAhC;AACH,KAHM,MAGA,IAAIjC,QAAQ,GAAG,CAAX,KAAiB,CAArB,EAAwB;AAC3Bb,MAAAA,YAAY,GAAG8C,SAAS,CAAC,cAAD,CAAxB;AACA7C,MAAAA,oBAAoB,GAAG6C,SAAS,CAAC,cAAD,CAAhC;AACH,KAHM,MAGA;AACH9C,MAAAA,YAAY,GAAG8C,SAAS,CAAC,cAAD,CAAxB;AACA7C,MAAAA,oBAAoB,GAAG6C,SAAS,CAAC,cAAD,CAAhC;AACH;;AAED9C,IAAAA,YAAY,CAACmD,IAAb,CAAkBC,KAAK,IAAI;AACvB,UAAIC,QAAQ,GAAGD,KAAK,CAACE,QAAN,CAAe,CAAf,EAAkBD,QAAjC;AAEA,YAAME,MAAM,GAAG,IAAIpE,KAAK,CAACqE,aAAV,GAA0BN,IAA1B,CAAgC,mBAAhC,CAAf;AAEAG,MAAAA,QAAQ,CAACI,IAAT,GAAgB,CAAhB;AACAJ,MAAAA,QAAQ,CAACK,eAAT,GAA2B,IAA3B;AACAL,MAAAA,QAAQ,CAACM,GAAT,GAAeJ,MAAf;AACAF,MAAAA,QAAQ,CAACO,SAAT,GAAqB,GAArB;AACAP,MAAAA,QAAQ,CAACQ,WAAT,GAAuB,IAAvB;AAEAT,MAAAA,KAAK,CAACU,KAAN,CAAYC,CAAZ,GAAgB,GAAhB;AACAX,MAAAA,KAAK,CAACU,KAAN,CAAYE,CAAZ,GAAgB,GAAhB;AACAZ,MAAAA,KAAK,CAACU,KAAN,CAAY3D,CAAZ,GAAgB,GAAhB;AAEAb,MAAAA,KAAK,CAAC2E,GAAN,CAAUb,KAAV;AACH,KAhBD,EAvEU,CAyFV;AACA;AACA;;AAEA,QAAIc,cAAc,GAAG,YAAW;AAC5B9C,MAAAA,WAAW,GAAG1B,MAAM,CAACC,UAAP,GAAoB,CAAlC;AACA0B,MAAAA,WAAW,GAAG3B,MAAM,CAACE,WAAP,GAAqB,CAAnC;AAEAJ,MAAAA,MAAM,CAAC2E,MAAP,GAAgBzE,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACE,WAA3C;AACAJ,MAAAA,MAAM,CAAC4E,sBAAP;AAEAvE,MAAAA,QAAQ,CAACO,OAAT,CAAkBV,MAAM,CAACC,UAAzB,EAAqCD,MAAM,CAACE,WAA5C;AACH,KARD;;AAUA,QAAIyE,mBAAmB,GAAG,UAASC,KAAT,EAAgB;AACtCpD,MAAAA,MAAM,GAAG,CAAE,CAAEoD,KAAK,CAACC,OAAR,GAAkBnD,WAApB,IAAoC,CAA7C;AACAD,MAAAA,MAAM,GAAG,CAAE,CAAEmD,KAAK,CAACE,OAAR,GAAkBnD,WAApB,IAAoC,CAA7C;AACH,KAHD;;AAKAoD,IAAAA,QAAQ,CAACC,gBAAT,CAA2B,WAA3B,EAAwCL,mBAAxC;AACA3E,IAAAA,MAAM,CAACgF,gBAAP,CAAyB,QAAzB,EAAmCR,cAAnC;;AAEA,QAAIS,WAAW,GAAG,UAASC,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8B;AAC5C,aAAO,CAACF,GAAG,GAAGC,MAAP,KAAgBC,MAAM,GAAGD,MAAzB,CAAP;AACH,KAFD;;AAIA,QAAIE,QAAQ,GAAG,UAASH,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8BE,MAA9B,EAAsCC,MAAtC,EAA8C;AACzD,UAAIC,EAAE,GAAGP,WAAW,CAACC,GAAD,EAAMC,MAAN,EAAcC,MAAd,CAApB;AACA,UAAIK,KAAK,GAAGF,MAAM,GAAGD,MAArB;AACA,aAAOA,MAAM,GAAIE,EAAE,GAAGC,KAAtB;AACH,KAJD,CAnHU,CAyHV;AACA;AACA;;;AAEA,QAAIC,OAAO,GAAG,YAAY;AACtBC,MAAAA,qBAAqB,CAAED,OAAF,CAArB;AAEA3D,MAAAA,QAAQ,CAAC6D,oBAAT,CAA8BxD,SAA9B;AAET,UAAIyD,cAAc,GAAGzD,SAAS,CAAC0D,KAAV,CAAgB,CAAhB,EAAoB1D,SAAS,CAAC2D,MAAV,GAAiB,CAAlB,GAAuB,CAA1C,CAArB,CAL+B,CAMtB;;AAEA,UAAIC,QAAQ,GAAGH,cAAc,CAACI,MAAf,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAApC,EAAuC,CAAvC,CAAf;AACA,UAAIC,WAAW,GAAGP,cAAc,CAACE,MAAjC;AACA,UAAIM,QAAQ,GAAIL,QAAQ,GAAGI,WAAZ,IAA4B,CAA3C;AACA,UAAIE,UAAU,GAAGD,QAAQ,GAAGD,WAA5B;AACA,UAAIG,YAAY,GAAGlB,QAAQ,CAACiB,UAAD,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAA3B;AAEAhG,MAAAA,YAAY,CAACmD,IAAb,CAAkBC,KAAK,IAAI;AAEvB,cAAM8C,SAAS,GAAG9C,KAAK,CAACE,QAAN,CAAe,CAAf,EAAkB6C,QAAlB,CAA2BC,UAA3B,CAAsClG,QAAtC,CAA+CmG,KAAjE;AAEAjD,QAAAA,KAAK,CAACU,KAAN,CAAYC,CAAZ,GAAgB,GAAhB;AACAX,QAAAA,KAAK,CAACU,KAAN,CAAYE,CAAZ,GAAgB,GAAhB;AACAZ,QAAAA,KAAK,CAACU,KAAN,CAAY3D,CAAZ,GAAgB,GAAhB;AAEAF,QAAAA,oBAAoB,CAACkD,IAArB,CAA0BmD,MAAM,IAAI;AAChChH,UAAAA,KAAK,CAAC2E,GAAN,CAAWb,KAAX;AACA,gBAAMmD,UAAU,GAAGD,MAAM,CAAChD,QAAP,CAAgB,CAAhB,EAAmB6C,QAAnB,CAA4BC,UAA5B,CAAuClG,QAAvC,CAAgDmG,KAAnE;AAEAC,UAAAA,MAAM,CAACxC,KAAP,CAAaC,CAAb,GAAiB,GAAjB;AACAuC,UAAAA,MAAM,CAACxC,KAAP,CAAaE,CAAb,GAAiB,GAAjB;AACAsC,UAAAA,MAAM,CAACxC,KAAP,CAAa3D,CAAb,GAAiB,GAAjB;;AAEA,eAAM,IAAIqG,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAG3D,OAArB,EAA8B2D,CAAC,EAA/B,EAAqC;AACjC;AACA,gBAAIC,GAAG,GAAG,GAAV;AACA,gBAAIC,IAAI,GAAGhH,MAAM,CAACiH,WAAP,CAAmBC,GAAnB,EAAX;AAEA,gBAAIC,MAAM,GAAG,IAAI1H,KAAK,CAAC2H,OAAV,CAAkBP,UAAU,CAACC,CAAC,GAAC,CAAH,CAA5B,EAAmCD,UAAU,CAACC,CAAC,GAAC,CAAF,GAAI,CAAL,CAA7C,EAAsDD,UAAU,CAACC,CAAC,GAAC,CAAF,GAAI,CAAL,CAAhE,CAAb;AAEA,gBAAIO,QAAQ,GAAG,CAACzF,KAAK,CAAC0F,OAAN,CAAcH,MAAM,CAAC9C,CAAP,GAAW2C,IAAI,GAAG,MAAhC,EAAwCG,MAAM,CAAC7C,CAAP,GAAW0C,IAAI,GAAG,MAA1D,IAAoE,CAArE,IAA0ET,YAA1E,GAAyFQ,GAAxG,CAPiC,CASjC;AACA;;AACAP,YAAAA,SAAS,CAACM,CAAC,GAAC,CAAF,GAAI,CAAL,CAAT,GAAmBK,MAAM,CAAC1G,CAAP,GAAY4G,QAAQ,GAACF,MAAM,CAAC1G,CAA/C;AACH;AACJ,SArBD;AAuBJiD,QAAAA,KAAK,CAACE,QAAN,CAAe,CAAf,EAAkB6C,QAAlB,CAA2BC,UAA3B,CAAsClG,QAAtC,CAA+C+G,WAA/C,GAA6D,IAA7D;AACC,OAhCD;AAkCAzH,MAAAA,MAAM,CAACU,QAAP,CAAgB6D,CAAhB,IAAqB,CAAE7C,MAAM,GAAG1B,MAAM,CAACU,QAAP,CAAgB6D,CAA3B,IAAiC,GAAtD;AACAvE,MAAAA,MAAM,CAACU,QAAP,CAAgB8D,CAAhB,IAAqB,CAAE,CAAE7C,MAAF,GAAW3B,MAAM,CAACU,QAAP,CAAgB8D,CAA7B,IAAmC,GAAxD;AAEAxE,MAAAA,MAAM,CAAC0H,MAAP,CAAe5H,KAAK,CAACY,QAArB;AAEAL,MAAAA,QAAQ,CAACsH,MAAT,CAAiB7H,KAAjB,EAAwBE,MAAxB;AACH,KAtDD;;AAwDA4F,IAAAA,OAAO;AAEP,WAAO,MAAMpF,YAAY,CAACoH,MAAb,EAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIrH,YAAY,KAAK,IAArB,EAA2B;AACvB,WAAKsH,KAAL,CAAWC,WAAX,CAAwB1H,QAAQ,CAAC2H,UAAjC;AACH,KAFD,MAEO;AACHxH,MAAAA,YAAY,CAACmD,IAAb,CAAkBC,KAAK,IAAI;AACvB9D,QAAAA,KAAK,CAAC8H,MAAN,CAAahE,KAAb;AACH,OAFD;AAGH;;AACD,SAAKnC,WAAL;AACH;;AAEDwG,EAAAA,kBAAkB,GAAG;AACjBzH,IAAAA,YAAY,CAACmD,IAAb,CAAkBC,KAAK,IAAI;AACvB9D,MAAAA,KAAK,CAAC8H,MAAN,CAAahE,KAAb;AACH,KAFD;AAIA,SAAKnC,WAAL;AACH;;AAEDkG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,GAAG,EAAEO,GAAG,IAAK,KAAKJ,KAAL,GAAaI,GAA/B;AAAqC,MAAA,SAAS,EAAG;AAAjD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAtOqC;;AAyO1C,eAAelH,WAAf","sourcesContent":["import React from \"react\";\nimport * as THREE from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport SimplexNoise from\"simplex-noise\"\nimport \"./three.css\";\n\nlet scene = new THREE.Scene();\nlet camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 );\nlet renderer = new THREE.WebGLRenderer( { alpha: true } );\n\nvar myObjPromise, myObjPromiseOriginal;\n\ncamera.position.z =250;\n\nrenderer.setSize( window.innerWidth, window.innerHeight );\nrenderer.setPixelRatio( window.devicePixelRatio );\nrenderer.setClearColor( 0x000000, 1);\n\nclass ThreeStatic extends React.Component {\n\n    constructor(props) {\n        super(props); \n        this.state = {\n            activeId: props.dataAppToThreeStatic,\n            // scene: new THREE.Scene(),\n            // camera: new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 ),\n            // renderer: new THREE.WebGLRenderer( { alpha: true } )\n        }\n        // this.state.camera.position.z =250;\n\n        // this.state.renderer.setSize( window.innerWidth, window.innerHeight );\n        // this.state.renderer.setPixelRatio( window.devicePixelRatio );\n        // this.state.renderer.setClearColor( 0x000000, 1);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        return {activeId: props.dataAppToThreeMusic}\n    }\n\n    threeObject() {\n        // this.state.scene = new THREE.Scene();  // TOTO TREBA OPRAVIT\n        // var scene = this.state.scene;\n        // var camera = this.state.camera;\n        // var renderer = this.state.renderer;\n\n        // this.mount.appendChild( this.state.renderer.domElement );\n\n        var activeId = this.state.activeId;\n\n        var mouseX = 0, mouseY = 0;\n        var windowHalfX = window.innerWidth / 2;\n        var windowHalfY = window.innerHeight / 2;\n\n        var noise = new SimplexNoise();\n\n        // AUDIO\n        var context = new AudioContext();\n        var analyser = context.createAnalyser();\n        analyser.fftSize = 256;\n        analyser.connect(context.destination); \n\n        var dataArray = new Uint8Array(analyser.frequencyBinCount);\n\n        var callback = function(stream) {\n            var mic = context.createMediaStreamSource(stream);\n            mic.connect(analyser);\n        }\n        \n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n        navigator.getUserMedia({ video : false, audio : true }, callback, console.log);\n\n\n        //\n        //\n        // OBJ LOADER & MODEL SETUP\n\n        const objSize = 61669;\n\n        var loadModel = function(url) {\n            return new Promise(resolve => {\n                new OBJLoader().load(url, resolve);\n            }); \n        }\n\n        // var myObjPromise, myObjPromiseOriginal;\n        // console.log(activeId);\n\n        if (activeId % 7 === 0) {\n            myObjPromise = loadModel('./data/strom-61669.obj');\n            myObjPromiseOriginal = loadModel('./data/strom-61669.obj');\n        } else if (activeId % 7 === 1) {\n            myObjPromise = loadModel('./data/lavicka-61186.obj');\n            myObjPromiseOriginal = loadModel('./data/lavicka-61186.obj');\n        } else if (activeId % 3 === 2) {\n            myObjPromise = loadModel('./data/pozor-48737.obj');\n            myObjPromiseOriginal = loadModel('./data/pozor-48737.obj');\n        } else if (activeId % 7 === 3) {\n            myObjPromise = loadModel('./data/1.obj');\n            myObjPromiseOriginal = loadModel('./data/1.obj');\n        } else if (activeId % 7 === 4) {\n            myObjPromise = loadModel('./data/2.obj');\n            myObjPromiseOriginal = loadModel('./data/2.obj');\n        } else if (activeId % 7 === 5) {\n            myObjPromise = loadModel('./data/3.obj');\n            myObjPromiseOriginal = loadModel('./data/3.obj');\n        } else {\n            myObjPromise = loadModel('./data/4.obj');\n            myObjPromiseOriginal = loadModel('./data/4.obj');\n        }\n\n        myObjPromise.then(myObj => {\n            var material = myObj.children[0].material;\n\n            const circle = new THREE.TextureLoader().load( './data/circle.png' );\n\n            material.size = 3;\n            material.sizeAttenuation = true;\n            material.map = circle;\n            material.alphaTest = 0.5;\n            material.transparent = true;\n\n            myObj.scale.x = 100;\n            myObj.scale.y = 100;\n            myObj.scale.z = 100;\n\n            scene.add(myObj);\n        });\n\n        //\n        //\n        // HELPER FUNCTIONS\n\n        var onWindowResize = function() {\n            windowHalfX = window.innerWidth / 2;\n            windowHalfY = window.innerHeight / 2;\n        \n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n        \n            renderer.setSize( window.innerWidth, window.innerHeight );\n        }\n        \n        var onDocumentMouseMove = function(event) {\n            mouseX = ( - event.clientX + windowHalfX ) / 2;\n            mouseY = ( - event.clientY + windowHalfY ) / 2;\n        }\n\n        document.addEventListener( 'mousemove', onDocumentMouseMove );\n        window.addEventListener( 'resize', onWindowResize );\n\n        var fractionate = function(val, minVal, maxVal) {\n            return (val - minVal)/(maxVal - minVal);\n        }\n        \n        var modulate = function(val, minVal, maxVal, outMin, outMax) {\n            var fr = fractionate(val, minVal, maxVal);\n            var delta = outMax - outMin;\n            return outMin + (fr * delta);\n        }\n        \n        //\n        //\n        // ANIMATE\n\n        var animate = function () {\n            requestAnimationFrame( animate );\n            \n            analyser.getByteFrequencyData(dataArray);\n\n\t\t\tvar lowerHalfArray = dataArray.slice(0, (dataArray.length/2) - 1);\n            // var upperHalfArray = dataArray.slice((dataArray.length/2) - 1, dataArray.length - 1);\n            \n            var lowerSum = lowerHalfArray.reduce((a, b) => a + b, 0);\n            var lowerLength = lowerHalfArray.length;\n            var lowerAvg = (lowerSum / lowerLength) || 0;\n            var lowerAvgFr = lowerAvg / lowerLength;\n            var distortionFr = modulate(lowerAvgFr, 0, 1, 0, 4);\n            \n            myObjPromise.then(myObj => {\n\n                const positions = myObj.children[0].geometry.attributes.position.array;\n        \n                myObj.scale.x = 100;\n                myObj.scale.y = 100;\n                myObj.scale.z = 100;\n        \n                myObjPromiseOriginal.then(myObj2 => {\n                    scene.add( myObj );\n                    const positions2 = myObj2.children[0].geometry.attributes.position.array;\n        \n                    myObj2.scale.x = 100;\n                    myObj2.scale.y = 100;\n                    myObj2.scale.z = 100;\n        \n                    for ( let i = 0; i < objSize; i ++ ) {\n                        // var offset = 20;\n                        var amp = 0.5;\n                        var time = window.performance.now();\n        \n                        var vertex = new THREE.Vector3(positions2[i*3], positions2[i*3+1], positions2[i*3+2]);\n        \n                        var distance = (noise.noise2D(vertex.x + time * 0.0003, vertex.y + time * 0.0001) + 0) * distortionFr * amp;\n        \n                        // positions[i*3] = vertex.x + distance;\n                        // positions[i*3+1] = vertex.y + distance;\n                        positions[i*3+2] = vertex.z + (distance*vertex.z);\n                    }\n                });\n        \n            myObj.children[0].geometry.attributes.position.needsUpdate = true;\n            });\n\n            camera.position.x += ( mouseX - camera.position.x ) * .05;\n            camera.position.y += ( - mouseY - camera.position.y ) * .05;\n\n            camera.lookAt( scene.position );\n\n            renderer.render( scene, camera );\n        };\n\n        animate();\n\n        return () => myObjPromise.remove();\n    }\n\n    componentDidMount() {\n        if (myObjPromise === null) {\n            this.mount.appendChild( renderer.domElement );\n        } else {\n            myObjPromise.then(myObj => {\n                scene.remove(myObj);\n            });\n        }\n        this.threeObject();\n    }\n\n    componentDidUpdate() {\n        myObjPromise.then(myObj => {\n            scene.remove(myObj);\n        });\n\n        this.threeObject()\n    }\n\n    render() {\n        return (\n            <div ref={ref => (this.mount = ref)} className = \"object\"/>\n        )\n    } \n}\n\nexport default ThreeStatic;"]},"metadata":{},"sourceType":"module"}