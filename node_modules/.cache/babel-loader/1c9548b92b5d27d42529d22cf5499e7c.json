{"ast":null,"code":"var _jsxFileName = \"/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/ThreeMusic.js\";\nimport React from \"react\";\nimport * as THREE from \"three\";\nimport \"./three.css\";\nimport SimplexNoise from \"./simplex-noise.js\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ThreeMusic extends React.Component {\n  componentDidMount() {\n    var mouseX = 0,\n        mouseY = 0;\n    var windowHalfX = window.innerWidth / 2;\n    var windowHalfY = window.innerHeight / 2;\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 2000);\n    camera.position.z = 250;\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setClearColor(0x000000, 1);\n    this.mount.appendChild(renderer.domElement);\n    var noise = new SimplexNoise(); // AUDIO\n\n    var context = new AudioContext();\n    var analyser = context.createAnalyser();\n    analyser.fftSize = 256;\n    analyser.connect(context.destination);\n    var dataArray = new Uint8Array(analyser.frequencyBinCount);\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n    navigator.getUserMedia({\n      video: false,\n      audio: true\n    }, callback, console.log);\n\n    var callback = function (stream) {\n      var mic = context.createMediaStreamSource(stream);\n      mic.connect(analyser);\n    }; // OBJ LOADER\n\n\n    const objSize = 61669;\n\n    var loadModel = function () {\n      var progress = console.log;\n      return new Promise(function (resolve, reject) {\n        const objLoader = new OBJLoader();\n        objLoader.load('./data/strom-61669.obj', resolve, progress, reject);\n      });\n    }; // MODEL SETUP\n\n\n    var myObjPromise = loadModel();\n    var myObjPromiseOriginal = loadModel();\n    myObjPromise.then(myObj => {\n      var geometry = myObj.geometry;\n      var material = myObj.children[0].material;\n      const circle = new THREE.TextureLoader().load('./data/circle.png');\n      material.size = 3;\n      material.sizeAttenuation = true;\n      material.map = circle;\n      material.alphaTest = 0.5;\n      material.transparent = true;\n      myObj.scale.x = 100;\n      myObj.scale.y = 100;\n      myObj.scale.z = 100;\n    });\n    const light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);\n    scene.add(light);\n\n    var fractionate = function (val, minVal, maxVal) {\n      return (val - minVal) / (maxVal - minVal);\n    };\n\n    var modulate = function (val, minVal, maxVal, outMin, outMax) {\n      var fr = fractionate(val, minVal, maxVal);\n      var delta = outMax - outMin;\n      return outMin + fr * delta;\n    };\n\n    var max = function (arr) {\n      return arr.reduce(function (a, b) {\n        return Math.max(a, b);\n      });\n    };\n\n    var onWindowResize = function () {\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    var onDocumentMouseMove = function (event) {\n      mouseX = (-event.clientX + windowHalfX) / 2;\n      mouseY = (-event.clientY + windowHalfY) / 2;\n    };\n\n    document.addEventListener('mousemove', onDocumentMouseMove);\n    window.addEventListener('resize', onWindowResize);\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      var lowerSum = lowerHalfArray.reduce((a, b) => a + b, 0);\n      var lowerLength = lowerHalfArray.length;\n      var lowerAvg = lowerSum / lowerLength || 0;\n      var lowerAvgFr = lowerAvg / lowerLength;\n      var distortionFr = modulate(lowerAvgFr, 0, 1, 0, 4);\n      myObjPromise.then(myObj => {\n        const positions = geometry.attributes.position.array;\n        myObj.scale.x = 100;\n        myObj.scale.y = 100;\n        myObj.scale.z = 100;\n        myObjPromiseOriginal.then(myObj2 => {\n          scene.add(myObj);\n          const positions2 = myObj2.children[0].geometry.attributes.position.array;\n          myObj2.scale.x = 100;\n          myObj2.scale.y = 100;\n          myObj2.scale.z = 100;\n\n          for (let i = 0; i < objSize; i++) {\n            var offset = 20;\n            var amp = 0.5;\n            var time = window.performance.now();\n            var vertex = new THREE.Vector3(positions2[i * 3], positions2[i * 3 + 1], positions2[i * 3 + 2]);\n            var distance = (noise.noise2D(vertex.x + time * 0.0003, vertex.y + time * 0.0001) + 0) * distortionFr * amp; // positions[i*3] = vertex.x + distance;\n            // positions[i*3+1] = vertex.y + distance;\n\n            positions[i * 3 + 2] = vertex.z + distance * vertex.z;\n          }\n        });\n        geometry.attributes.position.needsUpdate = true;\n      });\n      camera.position.x += (mouseX - camera.position.x) * .05;\n      camera.position.y += (-mouseY - camera.position.y) * .05;\n      camera.lookAt(scene.position);\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.mount = ref,\n      className: \"object\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ThreeMusic;","map":{"version":3,"sources":["/Users/samo/Documents/VSVU/Fragmenty/fragmenty-web/src/ThreeMusic.js"],"names":["React","THREE","SimplexNoise","OBJLoader","ThreeMusic","Component","componentDidMount","mouseX","mouseY","windowHalfX","window","innerWidth","windowHalfY","innerHeight","scene","Scene","camera","PerspectiveCamera","position","z","renderer","WebGLRenderer","setSize","setPixelRatio","devicePixelRatio","setClearColor","mount","appendChild","domElement","noise","context","AudioContext","analyser","createAnalyser","fftSize","connect","destination","dataArray","Uint8Array","frequencyBinCount","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","video","audio","callback","console","log","stream","mic","createMediaStreamSource","objSize","loadModel","progress","Promise","resolve","reject","objLoader","load","myObjPromise","myObjPromiseOriginal","then","myObj","geometry","material","children","circle","TextureLoader","size","sizeAttenuation","map","alphaTest","transparent","scale","x","y","light","HemisphereLight","add","fractionate","val","minVal","maxVal","modulate","outMin","outMax","fr","delta","max","arr","reduce","a","b","Math","onWindowResize","aspect","updateProjectionMatrix","onDocumentMouseMove","event","clientX","clientY","document","addEventListener","animate","requestAnimationFrame","lowerSum","lowerHalfArray","lowerLength","length","lowerAvg","lowerAvgFr","distortionFr","positions","attributes","array","myObj2","positions2","i","offset","amp","time","performance","now","vertex","Vector3","distance","noise2D","needsUpdate","lookAt","render","ref"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as THREE from \"three\";\nimport \"./three.css\";\nimport SimplexNoise from\"./simplex-noise.js\"\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\n\nclass ThreeMusic extends React.Component {\n    componentDidMount() {\n        var mouseX = 0, mouseY = 0;\n\n        var windowHalfX = window.innerWidth / 2;\n        var windowHalfY = window.innerHeight / 2;\n        \n        var scene = new THREE.Scene();\n        var camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 2000 );\n        camera.position.z = 250;\n\n        var renderer = new THREE.WebGLRenderer();\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        renderer.setPixelRatio( window.devicePixelRatio );\n        renderer.setClearColor( 0x000000, 1);\n        this.mount.appendChild( renderer.domElement );\n\n        var noise = new SimplexNoise();\n\n        // AUDIO\n        var context = new AudioContext();\n        var analyser = context.createAnalyser();\n        analyser.fftSize = 256;\n        analyser.connect(context.destination);\n\n        var dataArray = new Uint8Array(analyser.frequencyBinCount);\n\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n        navigator.getUserMedia({ video : false, audio : true }, callback, console.log);\n\n        var callback = function(stream) {\n            var mic = context.createMediaStreamSource(stream);\n            mic.connect(analyser);\n        }\n\n        // OBJ LOADER\n        const objSize = 61669;\n        var loadModel = function() {\n            var progress = console.log;\n            return new Promise(function( resolve, reject ){\n                const objLoader = new OBJLoader();\n                objLoader.load( './data/strom-61669.obj', resolve, progress, reject );\n            });\n        }\n\n        // MODEL SETUP\n        var myObjPromise = loadModel();\n        var myObjPromiseOriginal = loadModel();\n\n        myObjPromise.then(myObj => {\n            var geometry = myObj.geometry;\n            var material = myObj.children[0].material;\n\n            const circle = new THREE.TextureLoader().load( './data/circle.png' );\n\n            material.size = 3;\n            material.sizeAttenuation = true;\n            material.map = circle;\n            material.alphaTest = 0.5;\n            material.transparent = true;\n\n            myObj.scale.x = 100;\n            myObj.scale.y = 100;\n            myObj.scale.z = 100;\n        });\n\n        const light = new THREE.HemisphereLight( 0xffffbb, 0x080820, 1 );\n        scene.add( light );\n\n        var fractionate = function(val, minVal, maxVal) {\n            return (val - minVal)/(maxVal - minVal);\n        }\n        \n        var modulate = function(val, minVal, maxVal, outMin, outMax) {\n            var fr = fractionate(val, minVal, maxVal);\n            var delta = outMax - outMin;\n            return outMin + (fr * delta);\n        }\n        \n        var max = function(arr) {\n            return arr.reduce(function(a, b){ return Math.max(a, b); })\n        }\n\n        var onWindowResize = function() {\n            windowHalfX = window.innerWidth / 2;\n            windowHalfY = window.innerHeight / 2;\n        \n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n        \n            renderer.setSize( window.innerWidth, window.innerHeight );\n        }\n        \n        var onDocumentMouseMove = function(event) {\n            mouseX = ( - event.clientX + windowHalfX ) / 2;\n            mouseY = ( - event.clientY + windowHalfY ) / 2;\n        }\n\n        document.addEventListener( 'mousemove', onDocumentMouseMove );\n        window.addEventListener( 'resize', onWindowResize );\n        \n        var animate = function () {\n            requestAnimationFrame( animate );\n\n            var lowerSum = lowerHalfArray.reduce((a, b) => a + b, 0);\n            var lowerLength = lowerHalfArray.length;\n            var lowerAvg = (lowerSum / lowerLength) || 0;\n            var lowerAvgFr = lowerAvg / lowerLength;\n            var distortionFr = modulate(lowerAvgFr, 0, 1, 0, 4);\n            \n            myObjPromise.then(myObj => {\n\n                const positions = geometry.attributes.position.array;\n        \n                myObj.scale.x = 100;\n                myObj.scale.y = 100;\n                myObj.scale.z = 100;\n        \n                myObjPromiseOriginal.then(myObj2 => {\n                    scene.add( myObj );\n                    const positions2 = myObj2.children[0].geometry.attributes.position.array;\n        \n                    myObj2.scale.x = 100;\n                    myObj2.scale.y = 100;\n                    myObj2.scale.z = 100;\n        \n                    for ( let i = 0; i < objSize; i ++ ) {\n                        var offset = 20;\n                        var amp = 0.5;\n                        var time = window.performance.now();\n        \n                        var vertex = new THREE.Vector3(positions2[i*3], positions2[i*3+1], positions2[i*3+2]);\n        \n                        var distance = (noise.noise2D(vertex.x + time * 0.0003, vertex.y + time * 0.0001) + 0) * distortionFr * amp;\n        \n                        // positions[i*3] = vertex.x + distance;\n                        // positions[i*3+1] = vertex.y + distance;\n                        positions[i*3+2] = vertex.z + (distance*vertex.z);\n                    }\n                });\n        \n            geometry.attributes.position.needsUpdate = true;\n            });\n\n            camera.position.x += ( mouseX - camera.position.x ) * .05;\n            camera.position.y += ( - mouseY - camera.position.y ) * .05;\n\n            camera.lookAt( scene.position );\n\n            renderer.render( scene, camera );\n        };\n\n        animate();\n    }\n    render() {\n        return (\n            <div ref={ref => (this.mount = ref)} className = \"object\"/>\n        )\n    } \n}\n\nexport default ThreeMusic;"]},"metadata":{},"sourceType":"module"}